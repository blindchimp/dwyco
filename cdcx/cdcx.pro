######################################################################
# Automatically generated by qmake (2.00a) Fri Aug 26 11:49:09 2005
######################################################################

# WARNING: shadow-builds in qt creator don't work with this qmake file very well
# I think it has something to do with the "dumptime" thing trying to
# touch a non-existent file during a rebuild. need to fix that

TEMPLATE = app
TARGET = CDC-X
DEPENDPATH += .
INCLUDEPATH += .
macx-g++:dateincr.commands = $${PWD}/dumptime-mac $${PWD}/main.cpp
macx-clang:dateincr.commands = $${PWD}/dumptime-mac $${PWD}/main.cpp
linux-g++-64:dateincr.commands = $${PWD}/dumptime $${PWD}/main.cpp
linux-g++:dateincr.commands = $${PWD}/dumptime32 $${PWD}/main.cpp
windows:dateincr.commands = $$replace(PWD, /, \\)\\dumptime $$replace(PWD, /, \\)\\main.cpp $$replace(OUT_PWD, /, \\)\\buildtime.h
dateincr.depends = FORCE
QMAKE_EXTRA_TARGETS += dateincr
PRE_TARGETDEPS += dateincr
QT +=  core network
equals(QT_MAJOR_VERSION, 4): QT += webkit
macx-g++|macx-clang|win32|linux-g++|linux-g++-64:greaterThan(QT_MAJOR_VERSION, 4): QT += core gui widgets multimedia #webkitwidgets

RESOURCES=icons.qrc
#CONFIG-=app_bundle
#macx-g++:CONFIG+= x86_64
#macx-clang:CONFIG+= x86_64
#QMAKE_MACOSX_DEPLOYMENT_TARGET=10.9

macx-g++|macx-clang {
QMAKE_CXXFLAGS_X86_64 += -mmacosx-version-min=10.9
QMAKE_LFLAGS += -mmacosx-version-min=10.9
}

win32-*:CONFIG += embed_manifest_exe
ICON = greenguy.icns
RC_FILE = mumble.rc

# only need this if linking statically
#QTPLUGIN+=qjpeg
# Input
DEFINES += CDCX_RELEASE
DEFINES += CDCX_MAC_USE_DEFAULT_LOCATION
DEFINES += WHATBOX=BrowseBox
#DEFINES += LOCAL_TEST
#DEFINES += NO_BUILDTIME
DEFINES += CDCX_WEBKIT
greaterThan(QT_MAJOR_VERSION, 4): DEFINES += DWYCO_QT5
greaterThan(QT_MAJOR_VERSION, 4): DEFINES += toAscii=toLatin1
#DEFINES += NO_DWYCO_AUDIO
#DEFINES += LEAK_CLEANUP
HEADERS += mainwin.h tfhex.h dwyco_new_msg.h evret.h about.h composer.h autoupdate.h msgtohtml.h player.h ssmap.h  config.h snd.h croom.h pw.h login.h qwiz.h userwid.h cspw.h qval.h dirmisc.h iglist.h ct.h userlob.h  \
    vidlab.h \
    simple_public.h \
    popup_profile.h \
    lobbybox3.h \
    vidbox.h \
	toswarn.h \
    browsebox.h \
    msgbrowsedock.h \
    msglistmodel.h \
    profilepreviewbox.h \
    simpledirbox.h \
    simple_call.h \
    dwquerybymember.h \
    chattext.h \
    aswitch.h \
    adminw.h \
    vidsel.h \
	pfx.h \
    prfview.h \
    profpv.h \
    simplehtmlbox.h \
    qlimitedbuffer.h \
    resizeimage.h
FORMS += mainwin.ui about.ui composer.ui autoupdate.ui player.ui config.ui croom.ui pw.ui login.ui userwid.ui cspw.ui iglist.ui netspeedwid.ui  \
    simple_public.ui \
    popup_profile.ui \
    lobbybox3.ui \
    vidbox.ui \
    toswarn.ui \
    browsebox.ui \
    msgbrowsedock.ui \
    simple_call.ui \
    adminw.ui \
    vidsel.ui \
    prfview.ui \
    simplehtmlbox.ui
SOURCES += main.cpp tfhex.cpp mainwin.cpp dwyco_new_msg.cpp evret.cpp dvp.cc about.cpp composer.cpp autoupdate.cpp msgtohtml.cpp player.cpp ssmap.cpp config.cpp snd.cpp croom.cpp pw.cpp login.cpp qwiz.cpp userwid.cpp cspw.cpp qval.cpp dirmisc.cpp iglist.cpp ct.cpp \
    vidlab.cpp \
    simple_public.cpp \
    popup_profile.cpp \
    lobbybox3.cpp \
    vidbox.cpp \
	toswarn.cpp \
    browsebox.cpp \
    msgbrowsedock.cpp \
    msglistmodel.cpp \
    profilepreviewbox.cpp \
    simpledirbox.cpp \
    simple_call.cpp \
    dwquerybymember.cpp \
    chattext.cpp \
    aswitch.cpp \
    adminw.cpp \
    vidsel.cpp \
	cdcxpan.cpp \
	pfx.cpp \
    prfview.cpp \
    profpv.cpp \
    simplehtmlbox.cpp \
    qlimitedbuffer.cpp \
    resizeimage.cpp \
    fname.cpp


linux-g++* {
INCLUDEPATH += ./dllwin

D = $${OUT_PWD}/../bld

LIBS += \
$${D}/cdc32/libcdc32.a \
$${D}/vc/libvc.a \
$${D}/crypto5/libcrypto5.a \
$${D}/dwcls/libdwcls.a \
$${D}/gsm/libgsm.a \
$${D}/kazlib/libkazlib.a \
$${D}/ppm/libppm.a \
$${D}/pgm/libpgm.a \
$${D}/pbm/libpbm.a \
$${D}/zlib/libzlib.a \
$${D}/theora.1.2.x/libtheora.1.2.x.a \
$${D}/v4lcap/libv4lcap.a \
$${D}/speex/libspeex.a \
$${D}/vorbis112/libvorbis.a \
$${D}/ogg/libogg.a \
$${D}/jenkins/libjenkins.a \
$${OUT_PWD}/../lib/libuv.a \
$${D}/miniupnp/miniupnp-master/miniupnpc/libminiupnpc.a \
-lesd \
-lSDL \
-lv4l2 \
-lsqlite3


QMAKE_CXX=ccache g++

QMAKE_CXXFLAGS_WARN_ON = -Wall -Wno-unused-parameter -Wno-reorder 
DEFINES += LINUX VCCFG_FILE
#QMAKE_CXXFLAGS +=  -fsanitize=address -O2
#QMAKE_LFLAGS +=  -fsanitize=address

}


win32 {

DEFINES += USE_VFW  MINGW_CLIENT VCCFG_FILE _CRT_SECURE_NO_WARNINGS __WIN32__ _Windows WIN32

INCLUDEPATH += dllwin
# use this for linking to dynamic cdcdll
#LIBS +=  \\Users\\dwight\\deploy-cdcx\\cdcdll8.lib winmm.lib user32.lib kernel32.lib

# use this for linking with static cdc lib
DEFINES += CDCCORE_STATIC
# ssl either isn't available or doesn't work, so we just
# compile out parts that aren't available in qt4
DEFINES += CDCX_NO_SSL

# use this if you are building with qmake files
#D = \\Users\\dwight\\build-cdcx\\bld

D = $$replace(OUT_PWD, /, \\)\\..\\bld
S = release
LIBS += \
$${D}\\cdc32\\$${S}\\cdc32.lib \
$${D}\\vc\\$${S}\\vc.lib \
$${D}\\crypto5\\$${S}\\crypto5.lib \
$${D}\\dwcls\\$${S}\\dwcls.lib \
$${D}\\gsm\\$${S}\\gsm.lib \
$${D}\\kazlib\\$${S}\\kazlib.lib \
$${D}\\ppm\\$${S}\\ppm.lib \
$${D}\\pgm\\$${S}\\pgm.lib \
$${D}\\pbm\\$${S}\\pbm.lib \
$${D}\\zlib\\$${S}\\zlib.lib \
$${D}\\jenkins\\$${S}\\jenkins.lib \
$${D}\\vorbis112\\$${S}\\vorbis.lib \
$${D}\\theora\\$${S}\\theora.lib \
$${D}\\speex\\$${S}\\speex.lib \
$${D}\\ogg\\$${S}\\ogg.lib \
$${D}\\miniupnp\\miniupnp-master\\miniupnpc\\$${S}\\miniupnpc.lib \
$${PWD}\\..\\bld\\mtcap\\mingw-rel\\win32\\mtcapxe.lib \
winmm.lib user32.lib kernel32.lib wsock32.lib vfw32.lib advapi32.lib ws2_32.lib  iphlpapi.lib binmode.obj

#\\mk\\depot\\dwycore\\bld\\cdc32\\win32\\vs2008\\Debug\\cdcdll.lib \

# NOTE: the opt:ref thing makes the linker do unreferenced code removal in
# a debug build 

# use this for the release build
#QMAKE_LFLAGS += /NODEFAULTLIB:libcmtd.lib  #/OPT:REF

# use this for debug build
#QMAKE_LFLAGS += #/OPT:REF
#QMAKE_LFLAGS += /DELAYLOAD:mtcapxe.dll

QMAKE_CXXFLAGS += /wd4100 /wd4068
#QMAKE_CXXFLAGS_RELEASE += -Od -Zi 
#QMAKE_CXXFLAGS_RELEASE += -MP
}

macx-g++|macx-clang|macx-xcode {
OBJECTIVE_SOURCES  += mactards.mm
QMAKE_OBJECTIVE_CFLAGS += -mmacosx-version-min=10.9
D = $${OUT_PWD}/../bld
LIBS += \
$${D}/cdc32/libcdc32.a \
$${D}/vc/libvc.a \
$${D}/crypto5/libcrypto5.a \
$${D}/dwcls/libdwcls.a \
$${D}/gsm/libgsm.a \
$${D}/kazlib/libkazlib.a \
$${D}/ppm/libppm.a \
$${D}/pgm/libpgm.a \
$${D}/pbm/libpbm.a \
$${D}/zlib/libzlib.a \
$${D}/theora/libtheora.a \
$${D}/vorbis112/libvorbis.a \
$${D}/ogg/libogg.a \
$${D}/jenkins/libjenkins.a \
$${D}/speex/libspeex.a \
$${PWD}/../bld/macdrv/libmacdrv.a \
$${OUT_PWD}/../lib/libuv.a \
$${D}/miniupnp/miniupnp-master/miniupnpc/libminiupnpc.a \
-Wl,-framework,Cocoa -Wl,-framework,QuickTime -Wl,-framework,AudioToolbox -Wl,-framework,CoreAudio -Wl,-framework,QTKit -Wl,-framework,QuartzCore -lc++

QMAKE_CXX=ccache g++
#QMAKE_CXXFLAGS +=  -fsanitize=address
#QMAKE_LFLAGS +=  -fsanitize=address
QMAKE_CXXFLAGS_WARN_ON = -Wall -Wno-unused-parameter -Wno-reorder #-Wno-self-assign
DEFINES += MAC_CLIENT 

INCLUDEPATH += ./dllwin

}



