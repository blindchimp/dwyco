diff --git a/phoo/+desktop/BareConvList.qml b/phoo/+desktop/BareConvList.qml
index a96e270c6..9207ad80c 100644
--- a/phoo/+desktop/BareConvList.qml
+++ b/phoo/+desktop/BareConvList.qml
@@ -137,6 +137,7 @@ Item {
                    Layout.fillWidth: true
                    color: "white"
                    font.weight: Font.Light
+                   font.pixelSize: applicationWindow1.font.pixelSize
                }
            }
            MouseArea {
@@ -197,7 +198,9 @@ Item {
        }
    }
    
-   
+   Rectangle {
+       color: "dimgray"
+       anchors.fill: parent
    ListView {
        id: listView2
        anchors.fill:parent
@@ -214,12 +217,13 @@ Item {
 
        ScrollBar.vertical: ScrollBar { 
            background: Rectangle {
-               color: "green"
+               color: "lightgreen"
            }
 
        }
 
    }
+   }
 
    Label {
        id: empty_help
diff --git a/phoo/+desktop/PublicChat.qml b/phoo/+desktop/PublicChat.qml
index 1d5c743d5..aa086bf9e 100644
--- a/phoo/+desktop/PublicChat.qml
+++ b/phoo/+desktop/PublicChat.qml
@@ -129,7 +129,7 @@ Page {
     Connections {
         target: core
 
-        onChat_event: {
+        function onChat_event(cmd, sid, huid, sname, vdata, qid, extra_arg) {
             console.log("got chat event")
             console.log(cmd, sid)
             console.log(huid)
diff --git a/phoo/AppDrawerForm.ui.qml b/phoo/AppDrawerForm.ui.qml
index aa3a59f58..babc90c0e 100644
--- a/phoo/AppDrawerForm.ui.qml
+++ b/phoo/AppDrawerForm.ui.qml
@@ -28,7 +28,7 @@ Pane {
     property real ctrl_pad: 4
     property alias circularImage: circularImage
     property alias text1: text1
-    padding: 6
+    padding: 0
 
     ColumnLayout {
         id: columnLayout
@@ -37,10 +37,13 @@ Pane {
 
         Rectangle {
             Layout.fillWidth: true
-            Layout.fillHeight: true
+            //Layout.fillHeight: true
+            implicitHeight: topbox.implicitHeight
+            implicitWidth: topbox.implicitWidth
             color: primary_dark
 
             ColumnLayout {
+                id: topbox
                 anchors.fill: parent
                 anchors.margins: mm(1)
                 Text {
@@ -53,7 +56,9 @@ Pane {
                     text: {
 
                         (core.is_database_online === 0 ? "" : "Online ")
-                                + (core.invisible ? "(Invisible)" : "")
+                                + (SyncDescModel.connection_count === 0 ? "" : "Sync ")
+                                + (core.invisible ? "(Invis)" : "")
+                                + "(Arch: " + (core.total_users - ConvListModel.count).toString() + ")"
                     }
                     color: "white"
                 }
@@ -84,6 +89,17 @@ Pane {
                         font.pixelSize: 12
                         color: "white"
                     }
+
+                    Text {
+                        visible: group_active
+                        text:  core.active_group_name + " (" + core.percent_synced + "%)"
+                        color: "white"
+                        clip: true
+                        Layout.alignment: Qt.AlignHCenter | Qt.AlignVCenter
+                        Layout.fillWidth: true
+                        Layout.margins: ctrl_pad
+                        font.pixelSize: 12
+                    }
                 }
             }
         }
diff --git a/phoo/BareChatList.qml b/phoo/BareChatList.qml
index a789a09b9..caa24fce2 100644
--- a/phoo/BareChatList.qml
+++ b/phoo/BareChatList.qml
@@ -26,7 +26,7 @@ Item {
             property int showit
             showit: (REVIEWED && REGULAR) || show_unreviewed
             height: showit ? picht() : 0
-            width: parent.width
+            width: ListView.view.width
             //opacity: {multiselect_mode && selected ? 0.5 : 1.0}
             color: primary_dark
             border.width: 1
@@ -80,6 +80,7 @@ Item {
                     clip: true
                     Layout.alignment: Qt.AlignLeft
                     Layout.fillWidth: true
+                    font.pixelSize: applicationWindow1.font.pixelSize
 
                 }
             }
diff --git a/phoo/CQRes.qml b/phoo/CQRes.qml
index fcdcf84a4..c021ac41f 100644
--- a/phoo/CQRes.qml
+++ b/phoo/CQRes.qml
@@ -30,7 +30,7 @@ Page {
 
     Connections {
         target: core
-        onCq_results_received : {
+        function onCq_results_received(succ) {
             if(succ) {
                 cq_res_model.load_from_cq_file()
                 query_succeeded = 1
@@ -76,30 +76,50 @@ Page {
             text: qsTr("PRIVACY NOTE: We DO NOT keep a copy of your contact list. Click the PRIVACY button for more details.")
             horizontalAlignment: Text.AlignHCenter
         }
+        TextFieldX {
+            id: single_email
+            placeholder_text: "Enter Email to search for"
+            inputMethodHints: Qt.ImhEmailCharactersOnly
+            visible: !is_mobile
+        }
+
         Button {
             Layout.alignment: Qt.AlignCenter
-            text: "Send Email Contacts Securely"
+            text: is_mobile ? "Send Email Contacts Securely" : "Search for email"
             onClicked: {
                 core.delete_cq_results()
-                if(core.load_contacts() === 0) {
-                    // permission denied
-                    return;
-                }
+                if(is_mobile)
+                {
+                    if(core.load_contacts() === 0) {
+                        // permission denied
+                        return;
+                    }
 
-                user_model.load_users_to_model()
-                if(user_model.count > 0) {
+                    user_model.load_users_to_model()
+                    if(user_model.count > 0) {
+                        user_model.send_query()
+                        query_in_progress = 1
+                        query_succeeded = 0
+                        core.set_local_setting("cq-in-progress", "1")
+                        core.set_local_setting("cq-succeeded", "0")
+                        no_contacts = false
+                    } else {
+                        query_in_progress = 0
+                        query_succeeded = 0
+                        core.set_local_setting("cq-in-progress", "0")
+                        core.set_local_setting("cq-succeeded", "0")
+                        no_contacts = true
+                    }
+                }
+                else
+                {
+                    user_model.set_model_to_single_email(single_email.text_input)
                     user_model.send_query()
                     query_in_progress = 1
                     query_succeeded = 0
                     core.set_local_setting("cq-in-progress", "1")
                     core.set_local_setting("cq-succeeded", "0")
                     no_contacts = false
-                } else {
-                    query_in_progress = 0
-                    query_succeeded = 0
-                    core.set_local_setting("cq-in-progress", "0")
-                    core.set_local_setting("cq-succeeded", "0")
-                    no_contacts = true
                 }
             }
             enabled: query_in_progress === 0
@@ -186,25 +206,36 @@ Page {
                     onTriggered: {
                         core.delete_cq_results()
                         cq_res_model.load_from_cq_file()
-                        if(core.load_contacts() === 0) {
-                            return
-                        }
+                        if(is_mobile)
+                        {
+                            if(core.load_contacts() === 0) {
+                                return
+                            }
 
-                        user_model.load_users_to_model()
-                        if(user_model.count > 0) {
-                            user_model.send_query()
-                            query_in_progress = 1
-                            query_succeeded = 0
-                            core.set_local_setting("cq-in-progress", "1")
-                            core.set_local_setting("cq-succeeded", "0")
-                            no_contacts = false
-                        } else {
+                            user_model.load_users_to_model()
+                            if(user_model.count > 0) {
+                                user_model.send_query()
+                                query_in_progress = 1
+                                query_succeeded = 0
+                                core.set_local_setting("cq-in-progress", "1")
+                                core.set_local_setting("cq-succeeded", "0")
+                                no_contacts = false
+                            } else {
+                                query_in_progress = 0
+                                query_succeeded = 0
+                                core.set_local_setting("cq-in-progress", "0")
+                                core.set_local_setting("cq-succeeded", "0")
+                                no_contacts = true
+
+                            }
+                        }
+                        else
+                        {
+                            single_email.text_input = ""
                             query_in_progress = 0
                             query_succeeded = 0
                             core.set_local_setting("cq-in-progress", "0")
                             core.set_local_setting("cq-succeeded", "0")
-                            no_contacts = true
-
                         }
                     }
                 }
@@ -246,7 +277,7 @@ Page {
                     Layout.margins: mm(.125)
                     Connections {
                         target: core
-                        onSys_uid_resolved : {
+                        function onSys_uid_resolved(uid) {
                             if(uid === model.uid) {
                                 preview.source = core.uid_profile_regular(uid) ? core.uid_to_profile_preview(uid) : ""
                             }
@@ -269,13 +300,14 @@ Page {
                         elide: Text.ElideRight
                         Connections {
                             target: core
-                            onSys_uid_resolved : {
+                            function onSys_uid_resolved(uid) {
                                 if(uid === model.uid) {
                                     nm.text = core.uid_profile_regular(uid) ? core.uid_to_profile_info(uid, DwycoCore.HANDLE) : "<<hidden>>"
                                 }
                             }
 
                         }
+                        font.pixelSize: applicationWindow1.font.pixelSize
 
                     }
                     Text {
@@ -284,6 +316,7 @@ Page {
                         text: email
                         clip: true
                         elide: Text.ElideRight
+                        font.pixelSize: applicationWindow1.font.pixelSize
                     }
 
                     Text {
@@ -293,12 +326,13 @@ Page {
                         Layout.fillHeight: true
                         text: {core.uid_profile_regular(uid) ? core.uid_to_profile_info(uid, DwycoCore.DESCRIPTION) : "<<hidden>>"}
                         clip: true
+                        font.pixelSize: applicationWindow1.font.pixelSize
                         //width: parent.width - (nm.width + preview.width)
 
                         wrapMode: Text.WrapAtWordBoundaryOrAnywhere
                         Connections {
                             target: core
-                            onSys_uid_resolved : {
+                            function onSys_uid_resolved(uid) {
                                 if(uid === model.uid) {
                                     desc.text = core.uid_profile_regular(uid) ? core.uid_to_profile_info(uid, DwycoCore.DESCRIPTION) : "<<hidden>>"
                                 }
@@ -338,8 +372,26 @@ Page {
 
     Component.onCompleted: {
         cqres_top.uid_selected.connect(top_dispatch.uid_selected)
-        query_in_progress = parseInt(core.get_local_setting("cq-in-progress"))
-        query_succeeded = parseInt(core.get_local_setting("cq-succeeded"))
+        var q = core.get_local_setting("cq-in-progress")
+        if(q === "")
+        {
+            query_in_progress = 0
+            core.set_local_setting("cq-in-progress", "0")
+        }
+        else
+        {
+            query_in_progress = parseInt(core.get_local_setting("cq-in-progress"))
+        }
+        q = core.get_local_setting("cq-succeeded")
+        if(q === "")
+        {
+            query_succeeded = 0;
+            core.set_local_setting("cq-succeeded", "0")
+        }
+        else
+        {
+            query_succeeded = parseInt(core.get_local_setting("cq-succeeded"))
+        }
         cq_res_model.load_from_cq_file()
     }
 
diff --git a/phoo/ConvList.qml b/phoo/ConvList.qml
index 546444463..c2e3b9343 100644
--- a/phoo/ConvList.qml
+++ b/phoo/ConvList.qml
@@ -317,6 +317,7 @@ Page {
                    text: display
                    elide: Text.ElideRight
                    clip: true
+                   font: applicationWindow1.font
                    Layout.alignment: Qt.AlignLeft
                    Layout.fillWidth: true
 
diff --git a/phoo/DSettings.qml b/phoo/DSettings.qml
index 19f8a0a6b..103ed87ab 100644
--- a/phoo/DSettings.qml
+++ b/phoo/DSettings.qml
@@ -176,6 +176,20 @@ Page {
 
             Layout.fillWidth: true
         }
+
+        ItemDelegate {
+            id: load_backup_button
+            text: qsTr("Load backup\n(quits Phoo, restarting finishes load.)")
+            onClicked: {
+                stack.push(restore_auto_backup)
+            }
+            onVisibleChanged: {
+                enabled = (core.get_android_backup_state() > 0)
+            }
+
+            Layout.fillWidth: true
+        }
+
         ItemDelegate {
             id: about_button
             text: qsTr("About")
diff --git a/phoo/DevGroup.qml b/phoo/DevGroup.qml
index a30c0924f..1818fcd0b 100644
--- a/phoo/DevGroup.qml
+++ b/phoo/DevGroup.qml
@@ -64,9 +64,18 @@ Page {
         anchors.margins: mm(2)
         spacing: mm(1)
         visible: !quitnow
+        Label {
+            id: helpme
+            text: "<a href=\"https://www.dwyco.net/general-5\">What is device linking?</a>"
+            textFormat: Text.RichText
+            onLinkActivated: {
+                Qt.openUrlExternally(link)
+            }
+        }
+
         Label {
             id: failed
-            text: "Linking failed.\nTry using a different account name or PIN."
+            text: "Linking failed.\nTry using a different group name or PIN."
             visible: show_failed
             Layout.fillWidth: true
         }
@@ -111,7 +120,7 @@ Page {
         TextFieldX {
             id: group_name
             text_input: !enabled ? core.active_group_name : ""
-            placeholder_text: "Account name (it can be anything you want)"
+            placeholder_text: "Group name (4+ chars, e.g. jane@mumble)"
             visible: !group_active
             inputMethodHints: Qt.ImhNoPredictiveText|Qt.ImhLowercaseOnly
             Layout.fillWidth: true
@@ -123,8 +132,8 @@ Page {
         TextFieldX {
             id: group_pw
             text_input: ""
-            placeholder_text: "Enter secret PIN (at least 4 digits)"
-            inputMethodHints: Qt.ImhNoAutoUppercase //Qt.ImhDigitsOnly
+            placeholder_text: "Group entry password (4+ chars, e.g. notpassword123)"
+            inputMethodHints: Qt.ImhNoAutoUppercase | Qt.ImhNoPredictiveText | Qt.ImhSensitiveData //Qt.ImhDigitsOnly
             visible: !group_active && !show_pin_layout.visible
             Layout.fillWidth: true
         }
@@ -134,7 +143,7 @@ Page {
             visible: group_active || requesting.visible
             Button {
                 id: show_pin
-                text: "Show PIN"
+                text: "Show password"
                 checkable: true
                 Layout.alignment: Qt.AlignVCenter
             }
@@ -157,7 +166,7 @@ Page {
             }
 
             visible: !(group_active || requesting.visible)
-            enabled: up_and_running //&& group_pw.text_input.length >= 3 && group_name.text_input.length > 4
+            enabled: up_and_running && group_pw.text_input.length >= 3 && group_name.text_input.length >= 4
             Layout.fillWidth: true
         }
         Switch {
@@ -175,7 +184,7 @@ Page {
         }
         Switch {
             id: server_mode
-            text: qsTr("Server mode (download and store all messages to this device)")
+            text: qsTr("Server mode (store all messages to this device)")
             checked: core.eager_pull
             onClicked: {
                 if(checked) {
@@ -247,6 +256,8 @@ Page {
                     width: ListView.view.width
                     height: implicitHeight
                     spacing: mm(1)
+                    property bool orig
+                    orig: { model.status === "od" || model.status === "oa" || model.status === "oi"}
 //                    Label {
 //                        text: status + " " + asserts + " " + sendq_count + " " + percent_synced
 //                        Layout.preferredWidth: cm(2)
@@ -297,10 +308,22 @@ Page {
                     Label {
                         id: handle_label
                         elide: Text.ElideRight
-                        text: "(" + uid.substring(0, 2) + ")" + handle
+                        text: (orig ? "(" : "]") + uid.substring(0, 2) + (orig ? ")" : "[") + handle
                         color: proxy ? "red" : "black"
                         //Layout.preferredWidth: cm(2)
                     }
+                    Label {
+                        id: conn_ip
+                        text: ip
+                        //color: proxy ? "red" : "green"
+                        visible: ip.length > 0
+                        //Layout.preferredWidth: cm(4)
+                    }
+                    Label {
+                        id: advertised_ip
+                        text: adv_ip
+                        visible: adv_ip.length > 0
+                    }
 //                    Label {
 //                        text: status
 //                        Layout.preferredWidth:  mm(5)
@@ -342,6 +365,17 @@ Page {
 
             clip: true
         }
+        ItemDelegate {
+            id: send_netlog
+            checkable: false
+            text: "net report"
+            onClicked: {
+                //core.send_report(the_man)
+                stack.push(send_multi_report)
+            }
+
+            visible: dwyco_debug
+        }
         ItemDelegate {
             id: show_join_log
             checkable: true
diff --git a/phoo/ForwardToList.qml b/phoo/ForwardToList.qml
index 4c139aa50..c0bdf0222 100644
--- a/phoo/ForwardToList.qml
+++ b/phoo/ForwardToList.qml
@@ -16,7 +16,7 @@ Page {
     id: forward_list
     //anchors.fill: parent
     property bool multiselect_mode : true
-    property string mid_to_forward
+    //property string mid_to_forward
     //property string uid_folder
     property int limited_forward: 0
 
@@ -24,6 +24,16 @@ Page {
 
     }
 
+    Component.onCompleted: {
+        limited_forward = core.flim(mid_to_forward)
+        if(limited_forward) {
+            user_model.load_admin_users_to_model()
+        } else {
+            user_model.load_users_to_model()
+        }
+        multiselect_mode = true
+    }
+
     Component {
         id: forward_list_delegate
         Rectangle {
@@ -128,69 +138,67 @@ Page {
             mid_to_forward = ""
         }
     }
-    ColumnLayout {
+
+    ListView {
+        id: listView2
         anchors.fill: parent
-        spacing: mm(2)
-
-        ListView {
-            id: listView2
-
-            model: user_model
-            delegate: forward_list_delegate
-            clip: true
-            //spacing: 5
-            ScrollBar.vertical: ScrollBar {
-                background: Rectangle {
-                    color: "green"
-                }
-            }
-            Layout.fillHeight: true
-            Layout.fillWidth: true
 
+        model: user_model
+        delegate: forward_list_delegate
+        clip: true
+        //spacing: 5
+        ScrollBar.vertical: ScrollBar {
+            background: Rectangle {
+                color: "green"
+            }
         }
 
-        Button {
-            id:send_button
-            Layout.fillWidth: true
-            Layout.margins: mm(5)
-            enabled: {user_model.selected_count > 0 ? true : false}
 
-            background: Rectangle {
-                id: bg
-                color: "indigo"
-                radius: 20
-            }
-            contentItem: Text {
-                color: send_button.enabled ? "white" : "gray"
-                text: send_button.text
-                anchors.centerIn: bg
-                verticalAlignment: Text.AlignVCenter
-                horizontalAlignment: Text.AlignHCenter
-            }
-            text: send_button.enabled ? "Send" : (limited_forward ? "Select Admin" : "Select Recipients")
-
-            onClicked: {
-                //            for(var i = 0; i < user_model.count; ++i) {
-                //                if(user_model.get(i).selected) {
-                //                    var recip_uid = user_model.get(i).uid
-                //                    core.send_forward(recip_uid, uid_folder, mid_to_forward)
-                //                }
-                //            }
-                // for some reason, when user_model is a subclass
-                // of sortproxymodel, the javascript above doesn't
-                // work. it displays properly and whatnot, but the count
-                // doesn't work, and i don't get a error. oh well, the
-                // sort proxy doesn't play well since you have to forward stuff
-                // out to the source model which is tedious.
-                // instead, i just implement the send in c++ in the model
-                user_model.send_forward_selected(mid_to_forward)
-                themsglist.reload_model()
-                chatbox.listview.positionViewAtBeginning()
-                //
-                stack.pop()
-            }
+    }
+
+    Button {
+        id:send_button
+        anchors.bottom: parent.bottom
+        anchors.horizontalCenter: parent.horizontalCenter
 
+        enabled: {user_model.selected_count > 0 ? true : false}
+
+        background: Rectangle {
+            id: bg
+            color: "indigo"
+            radius: 20
+        }
+        contentItem: Text {
+            color: send_button.enabled ? "white" : "gray"
+            text: send_button.text
+            anchors.centerIn: bg
+            verticalAlignment: Text.AlignVCenter
+            horizontalAlignment: Text.AlignHCenter
+        }
+        text: send_button.enabled ? "Send" : (limited_forward ? "Select Admin" : "Select Recipients")
+
+        onClicked: {
+            //            for(var i = 0; i < user_model.count; ++i) {
+            //                if(user_model.get(i).selected) {
+            //                    var recip_uid = user_model.get(i).uid
+            //                    core.send_forward(recip_uid, uid_folder, mid_to_forward)
+            //                }
+            //            }
+            // for some reason, when user_model is a subclass
+            // of sortproxymodel, the javascript above doesn't
+            // work. it displays properly and whatnot, but the count
+            // doesn't work, and i don't get a error. oh well, the
+            // sort proxy doesn't play well since you have to forward stuff
+            // out to the source model which is tedious.
+            // instead, i just implement the send in c++ in the model
+            user_model.send_forward_selected(mid_to_forward)
+            themsglist.reload_model()
+            chatbox.listview.positionViewAtBeginning()
+            //
+            stack.pop()
         }
+
     }
 
+
 }
diff --git a/phoo/IgnoreListDialog.qml b/phoo/IgnoreListDialog.qml
index 7b3619916..3eddc97af 100644
--- a/phoo/IgnoreListDialog.qml
+++ b/phoo/IgnoreListDialog.qml
@@ -18,6 +18,11 @@ Page {
         extras: extra_button
     }
 
+    font: applicationWindow1.font
+    Component.onCompleted: {
+        IgnoreListModel.load_users_to_model()
+    }
+
     Component {
         id: extra_button
 
diff --git a/phoo/Migrate.qml b/phoo/Migrate.qml
new file mode 100644
index 000000000..46c4b934b
--- /dev/null
+++ b/phoo/Migrate.qml
@@ -0,0 +1,94 @@
+import QtQuick 2.12
+import QtQuick.Controls 2.12
+import QtQuick.Layouts 1.12
+
+Rectangle {
+
+    property bool migration_in_progress
+    property bool migration_done
+    z: 5
+    color: primary_light
+//    MouseArea {
+//        anchors.fill: parent
+//        onClicked: {
+//            Qt.quit()
+//        }
+//    }
+    Connections {
+        target: core
+        function onMigration_complete() {
+            migration_done = true
+        }
+    }
+
+    ColumnLayout {
+        spacing: mm(1)
+        anchors.fill: parent
+
+        Label {
+            text: "Phoo files must be copied."
+            Layout.fillWidth: true
+            Layout.leftMargin: mm(3)
+
+        }
+        Label {
+            text: "Phoo will close when the copy is complete."
+            Layout.fillWidth: true
+            Layout.leftMargin: mm(3)
+
+        }
+        Label {
+            text: "Restart Phoo to use normally."
+            Layout.fillWidth: true
+            Layout.leftMargin: mm(3)
+
+        }
+        Label {
+            text: "Please SAVE pictures you want\n  to keep before uninstalling Phoo"
+            Layout.fillWidth: true
+            Layout.leftMargin: mm(3)
+
+        }
+        Button {
+            text: "Tap to start copy"
+            Layout.fillWidth: true
+            onClicked: {
+                core.background_migrate()
+                migration_in_progress = true
+            }
+            visible: !migration_in_progress && !migration_done
+        }
+
+        Button {
+            text: "Tap to finish"
+            //Layout.horizontalCenter: true
+            Layout.fillWidth: true
+            onClicked: {
+                // do directory swap, and exit immediately
+                core.directory_swap();
+                Qt.quit()
+            }
+            visible: migration_done
+        }
+        Button {
+            text: "Stop"
+            //Layout.horizontalCenter: true
+            Layout.fillWidth: true
+            onClicked: {
+                Qt.quit()
+            }
+            visible: busy.running
+        }
+        Item {
+            Layout.fillHeight: true
+        }
+
+    }
+    BusyIndicator {
+        id: busy
+        running: migration_in_progress && !migration_done
+        anchors.horizontalCenter: parent.horizontalCenter
+        anchors.verticalCenter: parent.verticalCenter
+    }
+
+}
diff --git a/phoo/MsgView.qml b/phoo/MsgView.qml
index c3f93562f..0b8aafdaa 100644
--- a/phoo/MsgView.qml
+++ b/phoo/MsgView.qml
@@ -24,6 +24,7 @@ Page {
     property bool fav
     property bool hid
     property string text_bg_color: primary_dark
+    property string export_result
 
     //anchors.fill:parent
 
@@ -46,14 +47,16 @@ Page {
             if(view_id !== -1) {
                 ui_id = core.play_zap_view(view_id)
             }
+            fav = core.has_tag_message(mid, "_fav")
+            hid = core.has_tag_message(mid, "_hid")
         }
     }
 
-    fav: { (mid.length > 0) ?
-             (core.get_fav_message(mid) === 1) : false
-    }
+//    fav: { (mid.length > 0) ?
+//             (core.get_fav_message(mid) === 1) : false
+//    }
 
-    hid: {mid.length > 0 ? core.has_tag_message(mid, "_hid") === 1 : false}
+//    hid: {mid.length > 0 ? core.has_tag_message(mid, "_hid") === 1 : false}
 
     Connections {
         target: core
@@ -62,6 +65,18 @@ Page {
                 view_source = img_path
             }
         }
+        function onMid_tag_changed(changed_mid) {
+            if(changed_mid != mid)
+                return
+            fav = core.has_tag_message(mid, "_fav")
+            hid = core.has_tag_message(mid, "_hid")
+        }
+        function onMsg_tag_change_global(changed_mid, huid) {
+            if(changed_mid != mid)
+                return
+            fav = core.has_tag_message(mid, "_fav")
+            hid = core.has_tag_message(mid, "_hid")
+        }
     }
 
     Component {
@@ -101,15 +116,6 @@ Page {
                     text: fav ? "Unfavorite" : "Favorite"
                     onTriggered: {
                         core.set_fav_message(mid, !fav)
-                        // oops, breaks binding
-                        //fav = !fav
-                        // this just causes the binding to be
-                        // recomputed, probably a better way of doing this
-                        // eventually, like onMid_tag_changed signal
-                        var save_mid = mid
-                        mid = ""
-                        mid = save_mid
-                        //themsglist.reload_model()
                     }
                 }
                 MenuItem {
@@ -119,10 +125,6 @@ Page {
                             core.unset_tag_message(mid, "_hid")
                         else
                             core.set_tag_message(mid, "_hid")
-                        var save_mid = mid
-                        mid = ""
-                        mid = save_mid
-                        //themsglist.reload_model()
                     }
                 }
                 MenuItem {
@@ -166,17 +168,128 @@ Page {
     }
 
     header: SimpleToolbar {
+        id: headbar
+        visible: !clean_button.checked
         extras: extras_button
 
     }
 
+    footer: ToolBar {
+        id: footbar
+        visible: !clean_button.checked
+        implicitWidth: parent.width
+        RowLayout {
+            width: parent.width
+            TipButton {
+                id: fav_button
+                contentItem: Image {
+                    source: mi("ic_star_black_24dp.png")
+
+                }
+                background: Rectangle {
+                    visible: fav
+                    color: primary_light
+                    radius: width / 2
+                }
+                onCheckedChanged: {
+                    core.set_fav_message(mid, checked)
+                }
+
+                checkable: true
+                checked: fav
+                ToolTip.text: "Favorite msg"
+                Layout.fillHeight: true
+            }
+            TipButton {
+                id: show_text_button
+                checkable: true
+                Layout.fillHeight: true
+                ToolTip.text: "Show msg text"
+                text: "Msg text"
+
+            }
+            TipButton {
+                id: clean_button
+                checkable: true
+                Layout.fillHeight: true
+                ToolTip.text: "Full screen"
+                contentItem: Image {
+                    source: mi("ic_fullscreen_black_24dp.png")
+
+                }
+            }
+
+            Item {
+                Layout.fillWidth: true
+            }
+            TipButton {
+                id: save_button
+                contentItem: Image {
+                    source: mi("ic_share_black_24dp.png")
+
+                }
+
+                onClicked: {
+                    // supposedly you don't need storage permissions to add to
+                    // image collections via mediastore on newer android versions
+                    if(AndroidPerms.android_api() < 29 && !AndroidPerms.external_storage_permission) {
+                        if(!AndroidPerms.request_sync("android.permission.WRITE_EXTERNAL_STORAGE"))
+                            return
+                    }
+
+                    var export_name = core.export_attachment(mid)
+                    if(export_name.length > 0) {
+                        export_result = "Saved to " + export_name.substring(export_name.lastIndexOf('/') + 1)
+                        if(Qt.platform.os == "android") {
+                            notificationClient.share_to_mediastore(export_name)
+                        } else {
+
+                        }
+                    }
+                    else {
+                        export_result = "FAILED save "
+                    }
+                    toast_opacity.stop()
+                    toast_opacity.start()
+                }
+
+                ToolTip.text: "Save attachment"
+                Layout.fillHeight: true
+            }
+            Item {
+                Layout.fillWidth: true
+            }
+            TipButton {
+                id: hid_button
+                contentItem: Image {
+                    source: mi("ic_visibility_off_black_24dp.png")
+                }
+                background: Rectangle {
+                    visible: hid
+                    color: "orange"
+
+                }
+                onCheckedChanged: {
+                if(checked)
+                    core.set_tag_message(mid, "_hid")
+                else
+                    core.unset_tag_message(mid, "_hid")
+                }
+                checkable: true
+                checked: hid
+                ToolTip.text: "Hide msg"
+                Layout.fillHeight: true
+            }
+        }
+    }
+
     Rectangle {
         id: isfav
         width: 32
         height: 32
         anchors.top: parent.top
         anchors.left: parent.left
-        visible: fav
+        visible: fav && !clean_button.checked
         z: 3
         color: primary_light
         radius: width / 2
@@ -192,7 +305,7 @@ Page {
         height: 32
         anchors.right:parent.right
         anchors.top:parent.top
-        visible: hid
+        visible: hid && !clean_button.checked
         z: 3
         color: "orange"
     }
@@ -248,6 +361,9 @@ Page {
                     core.delete_zap_view(view_id)
                     stack.pop()
                 }
+                onPressAndHold: {
+                    clean_button.checked = false
+                }
             }
         }
     }
@@ -276,11 +392,40 @@ Page {
         Layout.maximumHeight: viewer.source === "" ? (parent.height * 6) / 10 : parent.height / 3
 
         wrapMode: Text.Wrap
+        visible: show_text_button.checked
     }
     //}
 
     }
 
+    Label {
+        id: save_toast
+        text: export_result
+        color: "white"
+        anchors.centerIn: parent
+        z: 5
+        background: Rectangle {
+            radius: 3
+            color: "black"
+        }
+
+        opacity: 0.0
+        NumberAnimation {
+            id: toast_opacity
+            target: save_toast
+            easing.type: Easing.InQuart
+            properties: "opacity"
+            from: 1.0
+            to: 0.0
+            duration: 5000
+        }
+
+        onVisibleChanged: {
+            toast_opacity.stop()
+            opacity = 0.0
+        }
+    }
+
     BusyIndicator {
         id: busy1
         running: view_source == "" && view_id !== -1
diff --git a/phoo/ProfileUpdateDialog.qml b/phoo/ProfileUpdateDialog.qml
index a5ee2949d..6305c7d15 100644
--- a/phoo/ProfileUpdateDialog.qml
+++ b/phoo/ProfileUpdateDialog.qml
@@ -111,7 +111,10 @@ Page {
                             // ugh, what a hack
                             android_img_pick_hack = 0
                             android_img_pick_hack = 1
-                            notificationClient.open_image()
+                            if(notificationClient.open_image() === 0) {
+                                failed_msg.text = "Android blocked access to images."
+                                animateOpacity.start()
+                            }
                         } else {
                             picture_picker.visible = true
 
@@ -208,6 +211,7 @@ Page {
                 stack.pop()
             } else {
                 profile_sent = 0
+                failed_msg.text = "Update failed..."
                 animateOpacity.start()
             }
         }
@@ -226,10 +230,20 @@ Page {
         anchors.fill: parent
     }
 
+    Rectangle {
+        anchors.fill: failed_msg
+        color: "black"
+        z: 9
+        opacity: failed_msg.opacity
+    }
+
     Text {
         id: failed_msg
         text: "Update failed... "
+        font.bold: true
+        color: "white"
         anchors.centerIn: parent
+        z: 10
 
         opacity: 0.0
         NumberAnimation {
@@ -239,8 +253,6 @@ Page {
                from: 1.0
                to: 0.0
                duration: 3000
-
-
           }
     }
     
@@ -319,6 +331,7 @@ Page {
                     }
                     else
                     {
+                        failed_msg.text = "Update failed..."
                         animateOpacity.start()
                     }
                 }
diff --git a/phoo/PublicChat.qml b/phoo/PublicChat.qml
index eb628c97c..6cec3654b 100644
--- a/phoo/PublicChat.qml
+++ b/phoo/PublicChat.qml
@@ -191,6 +191,7 @@ Page {
                 wrapMode: Text.Wrap
                 opacity: 1.0
                 color: primary_text
+                font: applicationWindow1.font
                 
             }
             
diff --git a/phoo/Reindex.qml b/phoo/Reindex.qml
new file mode 100644
index 000000000..b399249c7
--- /dev/null
+++ b/phoo/Reindex.qml
@@ -0,0 +1,89 @@
+import QtQuick 2.12
+import QtQuick.Controls 2.12
+import QtQuick.Layouts 1.12
+
+Rectangle {
+
+    property bool reindex_in_progress
+    property bool reindex_done
+    z: 5
+    color: primary_light
+//    MouseArea {
+//        anchors.fill: parent
+//        onClicked: {
+//            Qt.quit()
+//        }
+//    }
+    Connections {
+        target: core
+        function onReindex_complete() {
+            reindex_done = true
+        }
+    }
+
+    ColumnLayout {
+        spacing: mm(1)
+        anchors.fill: parent
+
+        Label {
+            text: "This is a one-time Phoo upgrade"
+            Layout.fillWidth: true
+            Layout.leftMargin: mm(3)
+
+        }
+        Label {
+            text: "Please be patient,\n  it can take a minute."
+            Layout.fillWidth: true
+            Layout.leftMargin: mm(3)
+
+        }
+        Label {
+            text: "Restart Phoo to use normally."
+            Layout.fillWidth: true
+            Layout.leftMargin: mm(3)
+
+        }
+
+        Button {
+            text: "Tap to start upgrade"
+            Layout.fillWidth: true
+            onClicked: {
+                core.background_reindex()
+                reindex_in_progress = true
+            }
+            visible: !reindex_in_progress && !reindex_done
+        }
+
+        Button {
+            text: "Tap to finish"
+            //Layout.horizontalCenter: true
+            Layout.fillWidth: true
+            onClicked: {
+                core.set_local_setting("reindex1", "1")
+                Qt.quit()
+            }
+            visible: reindex_done
+        }
+        Button {
+            text: "Stop"
+            //Layout.horizontalCenter: true
+            Layout.fillWidth: true
+            onClicked: {
+                Qt.quit()
+            }
+            visible: busy.running
+        }
+
+        Item {
+            Layout.fillHeight: true
+        }
+
+    }
+    BusyIndicator {
+        id: busy
+        running: reindex_in_progress && !reindex_done
+        anchors.horizontalCenter: parent.horizontalCenter
+        anchors.verticalCenter: parent.verticalCenter
+    }
+
+}
diff --git a/phoo/RestoreAutoBackup.qml b/phoo/RestoreAutoBackup.qml
new file mode 100644
index 000000000..729bb78dd
--- /dev/null
+++ b/phoo/RestoreAutoBackup.qml
@@ -0,0 +1,87 @@
+
+/* ===
+; Copyright (c) 1995-present, Dwyco, Inc.
+;
+; This Source Code Form is subject to the terms of the Mozilla Public
+; License, v. 2.0. If a copy of the MPL was not distributed with this file,
+; You can obtain one at https://mozilla.org/MPL/2.0/.
+*/
+import QtQuick 2.12
+import QtQuick.Layouts 1.12
+import QtQuick.Controls 2.12
+import dwyco 1.0
+
+Rectangle {
+    anchors.fill: parent
+    // this just makes sure mouse events don't go down to other
+    // components
+    MouseArea {
+        anchors.fill: parent
+    }
+    gradient: Gradient {
+        GradientStop { position: 0.0; color: primary_light }
+        GradientStop { position: 1.0; color: primary_dark}
+    }
+    ColumnLayout {
+
+        anchors.fill:parent
+        anchors.margins: mm(3)
+
+
+        Item {
+            Layout.fillHeight: true
+            Layout.fillWidth: true
+        }
+        Label {
+            id: backup_available
+            text: qsTr("This is an Android auto-backup from a previous app installation. It has a partial backup of your pals and messages, enough to get you going.")
+            wrapMode: Text.WordWrap
+            Layout.fillWidth: true
+
+        }
+        Label {
+            id: restore_note1
+            text: qsTr("NOTE: Loading does not change your profile, device linking, or other account related things.")
+            wrapMode: Text.WordWrap
+            Layout.fillWidth: true
+
+        }
+        Label {
+            id: restore_note2
+            text: qsTr("No messages are deleted when you load this backup.")
+            wrapMode: Text.WordWrap
+            Layout.fillWidth: true
+
+        }
+        Button {
+            id: restore_backup
+            text: qsTr("Add previous pals and messages?\n(quits now, requires restart)")
+            onClicked: {
+                core.load_backup()
+                core.set_local_setting("reindex1", "")
+                //core.set_local_setting("restore-prompt", "1")
+                core.exit()
+                Qt.quit()
+            }
+            Layout.fillWidth: true
+        }
+
+
+        Item {
+            Layout.fillHeight: true
+            Layout.fillWidth: true
+        }
+        Button {
+            id: not_now
+            text: qsTr("Not now")
+            onClicked: {
+                //core.set_local_setting("restore-prompt", "1")
+                stack.pop()
+            }
+            Layout.fillWidth: true
+        }
+
+    }
+
+}
+
diff --git a/phoo/SendMulti.qml b/phoo/SendMulti.qml
new file mode 100644
index 000000000..b23d14c1b
--- /dev/null
+++ b/phoo/SendMulti.qml
@@ -0,0 +1,177 @@
+
+/* ===
+; Copyright (c) 1995-present, Dwyco, Inc.
+; 
+; This Source Code Form is subject to the terms of the Mozilla Public
+; License, v. 2.0. If a copy of the MPL was not distributed with this file,
+; You can obtain one at https://mozilla.org/MPL/2.0/.
+*/
+import QtQml 2.12
+import QtQuick 2.12
+import dwyco 1.0
+import QtQuick.Layouts 1.12
+import QtQuick.Controls 2.12
+
+Page {
+    id: send_multi_page
+    //anchors.fill: parent
+    property bool multiselect_mode : true
+    property string mid_to_forward
+
+    header: SimpleToolbar {
+
+    }
+    // note: this is needed since visible doesn't seem to
+    // propagated if you use this via a loader
+    Component.onCompleted: {
+        user_model.load_users_to_model()
+        multiselect_mode = true
+    }
+
+    Component {
+        id: forward_list_delegate
+        Rectangle {
+            height: vh(pct)
+            width: ListView.view.width
+            opacity: {multiselect_mode && selected ? 0.5 : 1.0}
+            color: primary_dark
+            border.width: 1
+            gradient: Gradient {
+                GradientStop { position: 0.0; color: "deeppink" }
+                GradientStop { position: 1.0; color: "lightgrey"}
+            }
+
+            RowLayout {
+                id: drow
+                spacing: mm(1)
+                anchors.fill: parent
+
+                CircularImage {
+                    id: ppic
+                    //width: dp(80)
+                    //height: dp(60)
+                    source : {
+                        (!invalid && ((REVIEWED && REGULAR) || show_unreviewed) && resolved_counter > -1) ?
+                                    core.uid_to_profile_preview(uid) :
+                                    "qrc:/new/red32/icons/red-32x32/exclamation-32x32.png"
+                    }
+                    //anchors.verticalCenter: parent.verticalCenter
+                    fillMode: Image.PreserveAspectCrop
+                    Layout.minimumWidth: picht()
+                    Layout.maximumWidth: picht()
+                    Layout.minimumHeight: picht()
+                    Layout.maximumHeight: picht()
+                    Layout.margins: mm(.125)
+
+                    Image {
+                        id: ggtiny
+                        width: .3 * ppic.height
+                        height: .3 * ppic.height
+                        source: "qrc:/new/prefix1/icons/ggtiny.png"
+                        anchors.top: parent.top
+                        anchors.left: parent.left
+                        visible: selected
+                        z: 3
+                        opacity: 1.0
+                    }
+
+                }
+
+                Text {
+                    text: display
+                    elide: Text.ElideRight
+                    clip: true
+                    Layout.alignment: Qt.AlignLeft
+                    Layout.fillWidth: true
+                }
+            }
+            MouseArea {
+                anchors.fill: drow
+                onClicked: {
+                    console.log("click")
+                    console.log(index)
+                    listView2.currentIndex = index
+                    if(multiselect_mode) {
+                        listView2.model.toggle_selected(uid)
+
+                    }
+                }
+            }
+
+        }
+
+    }
+
+    onMultiselect_modeChanged: {
+        listView2.model.set_all_selected(false)
+    }
+
+    DwycoSimpleUserModel {
+        id: user_model
+
+    }
+
+    onVisibleChanged: {
+        if(visible) {
+            user_model.load_users_to_model()
+            multiselect_mode = true
+        } else {
+            multiselect_mode = false
+            mid_to_forward = ""
+        }
+    }
+
+    ListView {
+        id: listView2
+        anchors.fill: parent
+        model: user_model
+        delegate: forward_list_delegate
+        clip: true
+        //spacing: 5
+        ScrollBar.vertical: ScrollBar {
+            background: Rectangle {
+                color: "green"
+            }
+        }
+    }
+
+    Button {
+        id:send_button
+        anchors.bottom: parent.bottom
+        anchors.horizontalCenter: parent.horizontalCenter
+
+        enabled: {user_model.selected_count > 0 ? true : false}
+
+        background: Rectangle {
+            id: bg
+            color: "indigo"
+            radius: 20
+        }
+        contentItem: Text {
+            color: send_button.enabled ? "white" : "gray"
+            text: send_button.text
+            anchors.centerIn: bg
+            verticalAlignment: Text.AlignVCenter
+            horizontalAlignment: Text.AlignHCenter
+        }
+        text: send_button.enabled ? "Send" : "Select Recipients"
+
+        onClicked: {
+            console.log("MULTI COUNT ", user_model.count)
+            for(var i = 0; i < user_model.count; ++i) {
+                if(user_model.at(i).selected) {
+                    var recip_uid = user_model.at(i).uid
+                    core.send_report(recip_uid)
+                    console.log(" selected ", recip_uid)
+                }
+            }
+            themsglist.reload_model()
+            //chatbox.listview.positionViewAtBeginning()
+            //
+            stack.pop()
+        }
+
+    }
+
+
+}
diff --git a/phoo/SimpDir.qml b/phoo/SimpDir.qml
index 1f94ea59b..2c97953d4 100644
--- a/phoo/SimpDir.qml
+++ b/phoo/SimpDir.qml
@@ -99,6 +99,7 @@ Page {
                         clip: true
                         font.bold: true
                         elide: Text.ElideRight
+                        font.pixelSize: applicationWindow1.font.pixelSize
                     }
                     Text {
                         Layout.alignment: Qt.AlignLeft
@@ -107,6 +108,7 @@ Page {
                         text: description
                         clip: true
                         wrapMode: Text.WrapAtWordBoundaryOrAnywhere
+                        font: applicationWindow1.font
 
                     }
                 }
@@ -254,7 +256,7 @@ Page {
 
     Connections {
         target: core
-        onIgnore_event: {
+        function onIgnore_event() {
             if(simpdir_top.visible)
                 core.refresh_directory()
         }
diff --git a/phoo/SimpleChatBox.qml b/phoo/SimpleChatBox.qml
index 5331d5045..850f0fd68 100644
--- a/phoo/SimpleChatBox.qml
+++ b/phoo/SimpleChatBox.qml
@@ -390,11 +390,13 @@ Page {
                                     // ugh, what a hack
                                     android_img_pick_hack = 0
                                     android_img_pick_hack = 2
-                                    notificationClient.open_image()
+                                    if(notificationClient.open_image() === 0) {
+                                        failed_msg.text = "Android blocked access to images."
+                                        animateOpacity.start()
+                                    }
                                 } else {
                                     picture_picker.visible = true
                                 }
-
                             }
                         }
                         MenuItem {
@@ -528,7 +530,7 @@ Page {
                         vidpanel.visible = false
                         core.enable_video_capture_preview(0)
                     }
-                    ind_online = connected === 1 ? true : false
+                    ind_online = connected
                 }
             }
 //        onIgnore_event: {
@@ -615,12 +617,12 @@ Page {
         anchors.top: parent.top
         anchors.topMargin: 0
         Layout.margins: mm(1)
-        BareConvList {
-            id: conv_sidebar
-            //visible: true
-            Layout.fillHeight: true
-            Layout.minimumWidth: parent.width / 5
-        }
+//        BareConvList {
+//            id: conv_sidebar
+//            //visible: true
+//            Layout.fillHeight: true
+//            Layout.minimumWidth: parent.width / 5
+//        }
 
         VidCall {
             id: vidpanel
@@ -662,6 +664,12 @@ Page {
                 //console.log("at y beg ", atYBeginning)
             }
         }
+        BareConvList {
+            id: conv_sidebar
+            //visible: true
+            Layout.fillHeight: true
+            Layout.minimumWidth: parent.width / 5
+        }
     }
 
 
@@ -790,8 +798,8 @@ Page {
                     fillMode: Image.PreserveAspectFit
                     // note: the extra "/" in file:// is to accomodate
                     // windows which may return "c:/mumble"
-                    //source: { PREVIEW_FILENAME == "" ? "" : ("file:///" + String(PREVIEW_FILENAME)) }
-                    source: {PREVIEW_FILENAME != "" ? ("file://" + PREVIEW_FILENAME) :
+                    source: { PREVIEW_FILENAME != "" ? (core.from_local_file(PREVIEW_FILENAME)) :
+                    //source: {PREVIEW_FILENAME != "" ? ("file://" + PREVIEW_FILENAME) :
                                                       (HAS_AUDIO === 1 ? mi("ic_audiotrack_black_24dp.png") : "")}
 
                     asynchronous: true
@@ -831,6 +839,7 @@ Page {
                     verticalAlignment: Text.AlignVCenter
                     wrapMode: Text.Wrap
                     textFormat: Text.RichText
+                    font: applicationWindow1.font
                     color: primary_text
                     clip: true
                     onLinkActivated: {
@@ -902,7 +911,9 @@ Page {
                             themsgview.uid = to_uid
                             themsgview.text_bg_color = ditem.color
                             if(model.IS_FILE === 1) {
-                                themsgview.view_source = model.PREVIEW_FILENAME === "" ? "" : ("file://" + String(model.PREVIEW_FILENAME))
+                                themsgview.view_source = model.PREVIEW_FILENAME === "" ? "" : (core.from_local_file(model.PREVIEW_FILENAME))
+
+                                // PREVIEW_FILENAME != "" ? ("file:///" + PREVIEW_FILENAME) :
                                 stack.push(themsgview)
                             }
                             else {
@@ -1183,6 +1194,32 @@ Page {
 
     }
 
+    Rectangle {
+        anchors.fill: failed_msg
+        color: "black"
+        z: 9
+        opacity: failed_msg.opacity
+    }
+
+    Text {
+        id: failed_msg
+        text: "Failed..."
+        font.bold: true
+        anchors.centerIn: parent
+        z: 10
+        color: "white"
+
+        opacity: 0.0
+        NumberAnimation {
+               id: animateOpacity
+               target: failed_msg
+               properties: "opacity"
+               from: 1.0
+               to: 0.0
+               duration: 3000
+          }
+    }
+
     Warning {
         id: warn
         visible: false
diff --git a/phoo/SimpleMsgBrowse.qml b/phoo/SimpleMsgBrowse.qml
index 84269bd1f..8427f46ae 100644
--- a/phoo/SimpleMsgBrowse.qml
+++ b/phoo/SimpleMsgBrowse.qml
@@ -45,11 +45,11 @@ Page {
     onMultiselect_modeChanged: {
         model.set_all_unselected()
     }
-    onVisibleChanged: {
-        multiselect_mode = false
-        filter_show_only_fav = 0
-        filter_show_sent = 1
-    }
+//    onVisibleChanged: {
+//        multiselect_mode = false
+//        filter_show_only_fav = 0
+//        filter_show_sent = 1
+//    }
 
     Component {
         id: extras_button
@@ -324,7 +324,7 @@ Page {
             radius: 3
             border.width: 1
             border.color: divider
-            color: {(IS_QD == 1) ? "gray" : ((SENT == 0) ? accent : primary_light)}
+            color: {(IS_QD === 1) ? "gray" : ((SENT === 0) ? accent : primary_light)}
             opacity: {multiselect_mode && SELECTED ? 0.5 : 1.0}
             z: 1
             clip: true
@@ -414,8 +414,8 @@ Page {
                 fillMode: Image.PreserveAspectFit
                 // note: the extra "/" in file:// is to accomodate
                 // windows which may return "c:/mumble"
-                //source: { PREVIEW_FILENAME == "" ? "" : ("file:///" + String(PREVIEW_FILENAME)) }
-                source: {PREVIEW_FILENAME != "" ? ("file://" + PREVIEW_FILENAME) :
+                source: { PREVIEW_FILENAME != "" ? (core.from_local_file(PREVIEW_FILENAME)) :
+                //source: {PREVIEW_FILENAME != "" ? ("file://" + PREVIEW_FILENAME) :
                                                   (HAS_AUDIO === 1 ? mi("ic_audiotrack_black_24dp.png") : "")}
 
                 asynchronous: true
diff --git a/phoo/SimpleTagMsgBrowse.qml b/phoo/SimpleTagMsgBrowse.qml
index 114e8e851..76ea487c2 100644
--- a/phoo/SimpleTagMsgBrowse.qml
+++ b/phoo/SimpleTagMsgBrowse.qml
@@ -321,8 +321,8 @@ Page {
                 fillMode: Image.PreserveAspectFit
                 // note: the extra "/" in file:// is to accomodate
                 // windows which may return "c:/mumble"
-                //source: { PREVIEW_FILENAME == "" ? "" : ("file:///" + String(PREVIEW_FILENAME)) }
-                source: {PREVIEW_FILENAME !== "" ? ("file://" + PREVIEW_FILENAME) :
+                source: { PREVIEW_FILENAME != "" ? (core.from_local_file(PREVIEW_FILENAME)) :
+                //source: {PREVIEW_FILENAME !== "" ? ("file://" + PREVIEW_FILENAME) :
                                                   (HAS_AUDIO === 1 ? mi("ic_audiotrack_black_24dp.png") : "")}
 
                 asynchronous: true
diff --git a/phoo/VidCamPreview.qml b/phoo/VidCamPreview.qml
index 60b781a8e..c68b00458 100644
--- a/phoo/VidCamPreview.qml
+++ b/phoo/VidCamPreview.qml
@@ -45,7 +45,7 @@ Page {
 
     Connections {
         target: core
-        onCamera_change: {
+        function onCamera_change(cam_on) {
             if(visible) {
                 if(cam_on) {
                     core.enable_video_capture_preview(1)
@@ -68,7 +68,7 @@ Page {
                 id: name
 
                 text: modelData
-                verticalAlignment: Text.verticalCenter
+                verticalAlignment: Text.AlignVCenter
                 Layout.fillWidth: true
 
                 MouseArea {
@@ -113,7 +113,7 @@ Page {
                 }
                 Connections {
                     target: core
-                    onVideo_capture_preview: {
+                    function onVideo_capture_preview(img_path) {
                         if(visible)
                             viewer.source = img_path
                     }
diff --git a/phoo/androidinst2/AndroidManifest.xml b/phoo/androidinst2/AndroidManifest.xml
index 703529454..dbd5d0e32 100644
--- a/phoo/androidinst2/AndroidManifest.xml
+++ b/phoo/androidinst2/AndroidManifest.xml
@@ -9,7 +9,7 @@
     <!-- %%INSERT_FEATURES -->
 
     <supports-screens android:largeScreens="true" android:normalScreens="true" android:anyDensity="true" android:smallScreens="true"/>
-    <application android:hardwareAccelerated="true" android:name="org.qtproject.qt5.android.bindings.QtApplication" android:label="-- %%INSERT_APP_NAME%% --" android:extractNativeLibs="true" android:icon="@drawable/icon">
+    <application android:hardwareAccelerated="true" android:name="org.qtproject.qt5.android.bindings.QtApplication" android:label="-- %%INSERT_APP_NAME%% --" android:extractNativeLibs="true" android:icon="@drawable/icon" android:fullBackupContent="@xml/backup_rules" android:hasFragileUserData="true" android:requestLegacyExternalStorage="true" android:preserveLegacyExternalStorage="true" >
         <activity android:configChanges="orientation|uiMode|screenLayout|screenSize|smallestScreenSize|layoutDirection|locale|fontScale|keyboard|keyboardHidden|navigation|mcc|mnc|density" android:name="com.dwyco.android.NotificationClient" android:label="phoo" android:screenOrientation="unspecified" android:launchMode="singleTop">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN"/>
@@ -81,9 +81,20 @@
 </service>
 <service android:name="com.dwyco.android.DwycoSender" android:enabled="true" android:process=":dwycosend">
 </service>
+<provider
+    android:name="androidx.core.content.FileProvider"
+    android:authorities="com.dwyco.phoo.provider"
+    android:exported="false"
+    android:grantUriPermissions="true">
+    <meta-data
+        android:name="android.support.FILE_PROVIDER_PATHS"
+        android:resource="@xml/provider_paths" />
+</provider>
     </application>
+<uses-feature android:glEsVersion="0x00020000" android:required="true"/>
 <uses-permission android:name="android.permission.INTERNET"/>
 <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
 <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
 <uses-permission android:name="android.permission.READ_CONTACTS"/>
 <uses-permission android:name="android.permission.VIBRATE"/>
diff --git a/phoo/androidinst2/assets/servers2.az b/phoo/androidinst2/assets/servers2.az
new file mode 100644
index 000000000..98af204aa
--- /dev/null
+++ b/phoo/androidinst2/assets/servers2.az
@@ -0,0 +1 @@
+090160901509017020210gearbiter3020215192.168.123.11401051000002011a02015Adult02015Adult09013020217s4.blindchimp.com02021266.135.48.7701054350009017020210gearbiter3020215192.168.123.11401051000102011a020214Trivia-EXTREME02015Adult09013020217s4.blindchimp.com02021266.135.48.7701054350109017020217s4.blindchimp.com02021266.135.48.7701054333302011a020210Clean Chat02015Adult0901302019heelbiter020215192.168.123.1140105435020901702019heelbiter020215192.168.123.11401054333402011a02013Gay02015Adult09013020217s4.blindchimp.com02021266.135.48.770105435030901702018ubuntu-s020215192.168.123.12601052300002011a02015Other02015Adult09013020217s4.blindchimp.com02021266.135.48.77010543500090140901701010010110101301010020210gearbiter3020215192.168.123.1140105395000901701010010110101301011020210gearbiter3020215192.168.123.1140105395010901701010010110101301012020210gearbiter3020215192.168.123.1140105395020901701010010110101301013020210gearbiter3020215192.168.123.114010539503090110901302019heelbiter020215192.168.123.11401046902090110901302019heelbiter020215192.168.123.114010510096090110901302019heelbiter020215192.168.123.11401043434090110901302019heelbiter020215192.168.123.11401043437
\ No newline at end of file
diff --git a/phoo/androidinst2/build.gradle b/phoo/androidinst2/build.gradle
index e19ef1d07..52827b718 100644
--- a/phoo/androidinst2/build.gradle
+++ b/phoo/androidinst2/build.gradle
@@ -24,7 +24,7 @@ apply plugin: 'com.google.firebase.crashlytics'
 
 dependencies {
     implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
-implementation platform('com.google.firebase:firebase-bom:29.0.1')
+implementation platform('com.google.firebase:firebase-bom:30.0.1')
 implementation 'com.google.firebase:firebase-messaging'
 implementation 'com.google.firebase:firebase-analytics'
 implementation 'com.google.firebase:firebase-crashlytics'
diff --git a/phoo/androidinst2/res/xml/backup_rules.xml b/phoo/androidinst2/res/xml/backup_rules.xml
new file mode 100644
index 000000000..e12465d29
--- /dev/null
+++ b/phoo/androidinst2/res/xml/backup_rules.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<full-backup-content>
+ <include domain="file" path="dwyco/phoo/aback.sql"/>
+</full-backup-content>
+
diff --git a/phoo/androidinst2/res/xml/provider_paths.xml b/phoo/androidinst2/res/xml/provider_paths.xml
new file mode 100644
index 000000000..e089ba78e
--- /dev/null
+++ b/phoo/androidinst2/res/xml/provider_paths.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<paths xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <!-- Share folder under internal file folder. The base folder is context.getFilesDir() -->
+    <files-path name="shares" path="dwyco/phoo/shares/" />
+
+</paths>
diff --git a/phoo/androidinst2/src/com/dwyco/phoo/DwycoApp.java b/phoo/androidinst2/src/com/dwyco/phoo/DwycoApp.java
index 0940af704..38fd3c2ff 100644
--- a/phoo/androidinst2/src/com/dwyco/phoo/DwycoApp.java
+++ b/phoo/androidinst2/src/com/dwyco/phoo/DwycoApp.java
@@ -16,6 +16,10 @@ public class DwycoApp {
         final public static String lock_shared_prefs = "com.dwyco.phoo.prefs";
 	// name of shared preferences
         final public static String shared_prefs = "phoo";
+	// name of file provider for sharing files into the mediastore
+	// warning! there is a bunch of other stupid glue in res/xml/provider_paths.xml
+	// and  AndroidManifest.xml <provider... yada> needed to get this working.
+	final public static String file_provider = "com.dwyco.phoo.provider";
 	// notification message to use when a msg has been downloaded in the
 	// background and is available immediately
         final public static String new_received = "New msg received";
diff --git a/phoo/androidperms.cpp b/phoo/androidperms.cpp
index 90983e4c6..74a9919c1 100644
--- a/phoo/androidperms.cpp
+++ b/phoo/androidperms.cpp
@@ -10,6 +10,16 @@ AndroidPerms::AndroidPerms(QObject *parent) : QObject(parent)
 
 }
 
+int
+AndroidPerms::android_api()
+{
+#ifndef ANDROID
+    return 0;
+#else
+    return QtAndroid::androidSdkVersion();
+#endif
+}
+
 void
 AndroidPerms::load()
 {
diff --git a/phoo/androidperms.h b/phoo/androidperms.h
index 9ca33b82b..4504bed39 100644
--- a/phoo/androidperms.h
+++ b/phoo/androidperms.h
@@ -17,6 +17,7 @@ public:
     Q_INVOKABLE void load();
     Q_INVOKABLE void toggle();
     Q_INVOKABLE bool request_sync(QString);
+    Q_INVOKABLE int android_api();
 
 signals:
 
diff --git a/phoo/callsm.cpp b/phoo/callsm.cpp
index c5063aebb..fea5559a7 100644
--- a/phoo/callsm.cpp
+++ b/phoo/callsm.cpp
@@ -101,6 +101,7 @@
 #include "ct.h"
 #include "callsm_objs.h"
 #include "ccmodel.h"
+#include "dwycolist2.h"
 
 extern int Public_chat_video_pause;
 //extern QByteArray My_uid;
@@ -646,6 +647,17 @@ simple_call::connect_signals()
     }
 }
 
+static
+QByteArray
+map_down(const QByteArray& uid)
+{
+    DWYCO_LIST r;
+    dwyco_map_uid_to_representative(uid.constData(), uid.length(), &r);
+    simple_scoped q(r);
+    QByteArray ruid = q.get<QByteArray>(0);
+    return ruid;
+}
+
 void
 simple_call::signal_dispatcher()
 {
@@ -653,12 +665,13 @@ simple_call::signal_dispatcher()
     if(sig_idx == -1)
         return;
     QMetaMethod mm = metaObject()->method(sig_idx);
-    // here we see if there is an matching signal with a uid
+    // here we see if there is a matching signal with a uid
     // argument in the mainwinform, and invoke that
     QByteArray b(mm.name());
     b.prepend("sc_");
+    QByteArray ruid = map_down(uid);
     QMetaObject::invokeMethod(Mainwinform, b, Qt::AutoConnection,
-                              Q_ARG(QString, uid.toHex()));
+                              Q_ARG(QString, ruid.toHex()));
 
 }
 
@@ -669,12 +682,13 @@ simple_call::signal_dispatcher_int(int i)
     if(sig_idx == -1)
         return;
     QMetaMethod mm = metaObject()->method(sig_idx);
-    // here we see if there is an matching signal with a uid
+    // here we see if there is a matching signal with a uid
     // argument in the mainwinform, and invoke that
     QByteArray b(mm.name());
     b.prepend("sc_");
+    QByteArray ruid = map_down(uid);
     QMetaObject::invokeMethod(Mainwinform, b, Qt::AutoConnection,
-                              Q_ARG(QString, uid.toHex()),
+                              Q_ARG(QString, ruid.toHex()),
                               Q_ARG(int, i));
 
 }
@@ -686,12 +700,13 @@ simple_call::signal_dispatcher_bool(bool i)
     if(sig_idx == -1)
         return;
     QMetaMethod mm = metaObject()->method(sig_idx);
-    // here we see if there is an matching signal with a uid
+    // here we see if there is a matching signal with a uid
     // argument in the mainwinform, and invoke that
     QByteArray b(mm.name());
     b.prepend("sc_");
+    QByteArray ruid = map_down(uid);
     QMetaObject::invokeMethod(Mainwinform, b, Qt::AutoConnection,
-                              Q_ARG(QString, uid.toHex()),
+                              Q_ARG(QString, ruid.toHex()),
                               Q_ARG(bool, i));
 
 }
@@ -703,12 +718,13 @@ simple_call::signal_dispatcher_string(QString i)
     if(sig_idx == -1)
         return;
     QMetaMethod mm = metaObject()->method(sig_idx);
-    // here we see if there is an matching signal with a uid
+    // here we see if there is a matching signal with a uid
     // argument in the mainwinform, and invoke that
     QByteArray b(mm.name());
     b.prepend("sc_");
+    QByteArray ruid = map_down(uid);
     QMetaObject::invokeMethod(Mainwinform, b, Qt::AutoConnection,
-                              Q_ARG(QString, uid.toHex()),
+                              Q_ARG(QString, ruid.toHex()),
                               Q_ARG(QString, i));
 
 }
diff --git a/phoo/callsm.h b/phoo/callsm.h
index ff04a11b9..bc853e03d 100644
--- a/phoo/callsm.h
+++ b/phoo/callsm.h
@@ -113,7 +113,7 @@ signals:
     void connect_established();
     void connect_failed();
     void connect_terminated();
-    void connect_terminated(QByteArray uid);
+    //void connect_terminated(QByteArray uid);
     void connect_already_exists();
 
     // signals for call setup/screening
diff --git a/phoo/convmodel.cpp b/phoo/convmodel.cpp
index 1e6afc58a..bbc99897c 100644
--- a/phoo/convmodel.cpp
+++ b/phoo/convmodel.cpp
@@ -414,12 +414,12 @@ ConvSortFilterModel::lessThan(const QModelIndex& left, const QModelIndex& right)
     else if(!lsm && rsm)
         return false;
 
-    bool lau = m->data(left, m->roleForName("any_unread")).toBool();
-    bool rau = m->data(right, m->roleForName("any_unread")).toBool();
-    if(lau && !rau)
-        return true;
-    else if(!lau && rau)
-        return false;
+//    bool lau = m->data(left, m->roleForName("any_unread")).toBool();
+//    bool rau = m->data(right, m->roleForName("any_unread")).toBool();
+//    if(lau && !rau)
+//        return true;
+//    else if(!lau && rau)
+//        return false;
 
     bool lsp = m->data(left, m->roleForName("pal")).toBool();
     bool rsp = m->data(right, m->roleForName("pal")).toBool();
diff --git a/phoo/ctlist.cpp b/phoo/ctlist.cpp
index e3b581aa6..33195cbf4 100644
--- a/phoo/ctlist.cpp
+++ b/phoo/ctlist.cpp
@@ -95,6 +95,13 @@ SimpleContactModel::load_users_to_model()
     }
 }
 
+void
+SimpleContactModel::set_model_to_single_email(const QString& email)
+{
+    clear();
+    add_contact_to_model("", "", email.toLatin1());
+}
+
 void send_contact_query(QList<QString> emails);
 
 void
diff --git a/phoo/ctlist.h b/phoo/ctlist.h
index 61b58a03d..cf285480a 100644
--- a/phoo/ctlist.h
+++ b/phoo/ctlist.h
@@ -47,6 +47,7 @@ public:
 
     Q_INVOKABLE void toggle_selected(int r);
     Q_INVOKABLE void send_query();
+    Q_INVOKABLE void set_model_to_single_email(const QString& email);
 
 public slots:
     void decr_selected_count(QObject*);
diff --git a/phoo/dlli.h b/phoo/dlli.h
index 92e850446..e2a4c079d 100644
--- a/phoo/dlli.h
+++ b/phoo/dlli.h
@@ -550,8 +550,14 @@ int DWYCOEXPORT dwyco_get_profile_to_viewer(const char *uid, int len_uid, DwycoP
 // you must call dwyco_free_array when you are done with fn_out
 //
 int DWYCOEXPORT dwyco_get_profile_to_viewer_sync(const char *uid, int len_uid, char **fn_out, int *len_fn_out);
+// look up exact name, and emit an IDENT message with the uid.
+// it is random if the handle results in multiple uid's.
 void DWYCOEXPORT dwyco_name_to_uid(const char *handle, int len_handle);
 
+// NOTE: returns the current group representative from our current
+// local cache. NOTE: this is EPHEMERAL, the representative can change.
+// XXX: need a message to indicate the groups we observe have changed.
+int dwyco_map_uid_to_representative(const char *uid, int len_uid, DWYCO_LIST *list_out);
 // not impl.
 int DWYCOEXPORT dwyco_remove_profile(DwycoProfileCallback cb, void *arg);
 int DWYCOEXPORT dwyco_update_profile(const char *text, int len_text, DwycoProfileCallback cb, void *arg);
@@ -643,8 +649,16 @@ void DWYCOEXPORT dwyco_set_channel_destroy_callback(int chan_id,
 // while it is being used under Windows
 #define DWYCO_AUTOUPDATE_IN_PROGRESS 3
 
+// NOTE: this mutex is used on windows to coordinate
+// the autoupdate and installer process. it is referenced
+// explicitly in the InnoSetup scripts, and in the
+// (completely antique) "waitwrap" exe to smooth the
+// update process. DO NOT CHANGE THIS.
+// note: this should NOT be used to try and coordinate
+// mutual exclusion between different clients using
+// the same data directories.
 #ifndef DWYCO_AUTOUPDATE_MUTEX_NAME
-#define DWYCO_AUTOUPDATE_MUTEX_NAME "dwyco cdcx mutex2"
+#define DWYCO_AUTOUPDATE_MUTEX_NAME(app) "dwyco " app " mutex2"
 #endif
 
 // autoupdate check status
@@ -706,7 +720,7 @@ int DWYCOEXPORT dwyco_uid_status(const char *uid, int len_uid);
 void DWYCOEXPORT dwyco_uid_to_ip(const char *uid, int len_uid, int *can_do_direct, char **str_out);
 int DWYCOEXPORT dwyco_uid_to_ip2(const char *uid, int len_uid, int *can_do_direct_out, char **str_out);
 int DWYCOEXPORT dwyco_uid_g(const char *uid, int len_uid);
-int DWYCOEXPORT dwyco_load_users();
+int DWYCOEXPORT dwyco_load_users_internal();
 int DWYCOEXPORT dwyco_load_users2(int recent, int *total_out);
 int DWYCOEXPORT dwyco_get_user_list2(DWYCO_USER_LIST *list_out, int *nelems_out);
 int DWYCOEXPORT dwyco_get_message_index(DWYCO_MSG_IDX *list_out, const char *uid, int len_uid);
@@ -1193,9 +1207,6 @@ void DWYCOEXPORT dwyco_resume();
 
 int DWYCOEXPORT dwyco_service_channels(int *spin);
 void DWYCOEXPORT dwyco_set_client_version(const char *str, int len_str);
-// use this to filter out local broadcasts and other online reporting
-// for dwyco apps using the same back end.
-void DWYCOEXPORT dwyco_set_app_id(const char *str, int len_str);
 //void DWYCOEXPORT dwyco_set_login_password(const char *pw, int len_pw);
 void DWYCOEXPORT dwyco_set_login_result_callback(DwycoServerLoginCallback cb);
 void DWYCOEXPORT dwyco_database_login();
@@ -1208,6 +1219,7 @@ void DWYCOEXPORT dwyco_inhibit_sac(int i);
 void DWYCOEXPORT dwyco_inhibit_incoming_sac(int i);
 void DWYCOEXPORT dwyco_inhibit_outgoing_sac(int i);
 void DWYCOEXPORT dwyco_inhibit_all_incoming(int i);
+void DWYCOEXPORT dwyco_set_disposition(const char *str, int len_str);
 //void DWYCOEXPORT dwyco_inhibit_chat(int i);
 
 int DWYCOEXPORT dwyco_get_audio_hw(int *has_audio_input, int *has_audio_output, int *audio_hw_full_duplex);
@@ -1540,6 +1552,10 @@ int DWYCOEXPORT dwyco_copy_out_backup(const char *dir, int force);
 void DWYCOEXPORT dwyco_remove_backup();
 int DWYCOEXPORT dwyco_restore_from_backup(const char *bu_fn, int msgs_only);
 
+int DWYCOEXPORT dwyco_get_android_backup_state();
+int DWYCOEXPORT dwyco_set_android_backup_state(int i);
+int DWYCOEXPORT dwyco_restore_android_backup();
+
 
 // not called from java
 #define DWYCO_CONTACT_LIST_NAME "000"
diff --git a/phoo/dwyco.qrc b/phoo/dwyco.qrc
index 3cdca2325..701c457c5 100644
--- a/phoo/dwyco.qrc
+++ b/phoo/dwyco.qrc
@@ -1,21 +1,21 @@
 <RCC>
     <qresource prefix="/">
-        <file>androidinst/assets/dsadwyco.pub</file>
-        <file>androidinst/assets/dwyco.dh</file>
-        <file>androidinst/assets/license.txt</file>
-        <file>androidinst/assets/no_img.png</file>
-        <file>androidinst/assets/online.wav</file>
-        <file>androidinst/assets/relaxed-call.wav</file>
-        <file>androidinst/assets/relaxed-incoming.wav</file>
-        <file>androidinst/assets/relaxed-online.wav</file>
-        <file>androidinst/assets/relaxed-zap.wav</file>
-        <file>androidinst/assets/servers2</file>
-        <file>androidinst/assets/space-call.wav</file>
-        <file>androidinst/assets/space-incoming.wav</file>
-        <file>androidinst/assets/space-online.wav</file>
-        <file>androidinst/assets/space-zap.wav</file>
-        <file>androidinst/assets/v21.ver</file>
-        <file>androidinst/assets/zap.wav</file>
+        <file>androidinst2/assets/dsadwyco.pub</file>
+        <file>androidinst2/assets/dwyco.dh</file>
+        <file>androidinst2/assets/license.txt</file>
+        <file>androidinst2/assets/no_img.png</file>
+        <file>androidinst2/assets/online.wav</file>
+        <file>androidinst2/assets/relaxed-call.wav</file>
+        <file>androidinst2/assets/relaxed-incoming.wav</file>
+        <file>androidinst2/assets/relaxed-online.wav</file>
+        <file>androidinst2/assets/relaxed-zap.wav</file>
+        <file>androidinst2/assets/servers2</file>
+        <file>androidinst2/assets/space-call.wav</file>
+        <file>androidinst2/assets/space-incoming.wav</file>
+        <file>androidinst2/assets/space-online.wav</file>
+        <file>androidinst2/assets/space-zap.wav</file>
+        <file>androidinst2/assets/v21.ver</file>
+        <file>androidinst2/assets/zap.wav</file>
         <file>qtlabscontrols.conf</file>
         <file>qtquickcontrols2.conf</file>
     </qresource>
diff --git a/phoo/dwyco_new_msg.cpp b/phoo/dwyco_new_msg.cpp
index 1445ecd3d..31a177bf3 100644
--- a/phoo/dwyco_new_msg.cpp
+++ b/phoo/dwyco_new_msg.cpp
@@ -12,7 +12,6 @@
 #include <QDataStream>
 #include "dwyco_new_msg.h"
 #include "dlli.h"
-#include "pfx.h"
 #include "dwycolist2.h"
 
 [[noreturn]] void cdcxpanic(const char *);
@@ -38,6 +37,12 @@ add_unviewed(const QByteArray& uid, const QByteArray& mid)
     Got_msg_from_this_session.insert(uid);
 }
 
+void
+add_got_msg_from(const QByteArray& uid)
+{
+    Got_msg_from_this_session.insert(uid);
+}
+
 void
 load_inbox_tags_to_unviewed(QSet<QByteArray>& uids_out)
 {
diff --git a/phoo/dwyco_new_msg.h b/phoo/dwyco_new_msg.h
index 7e86de00b..4f833fcc8 100644
--- a/phoo/dwyco_new_msg.h
+++ b/phoo/dwyco_new_msg.h
@@ -25,5 +25,6 @@ bool got_msg_this_session(const QByteArray &uid);
 void clear_session_msg();
 void clear_unviewed_msgs();
 void load_inbox_tags_to_unviewed(QSet<QByteArray>&);
+void add_got_msg_from(const QByteArray& uid);
 
 #endif
diff --git a/phoo/dwyco_top.cpp b/phoo/dwyco_top.cpp
index 1a82b9da6..78e642a0f 100644
--- a/phoo/dwyco_top.cpp
+++ b/phoo/dwyco_top.cpp
@@ -17,6 +17,9 @@
 #include <QGuiApplication>
 #include <QTextDocumentFragment>
 #include <QNetworkAccessManager>
+#ifdef LINUX
+#include <unistd.h>
+#endif
 #ifdef ANDROID
 #include <QtAndroid>
 #endif
@@ -52,7 +55,6 @@
 #include "v4lcapexp.h"
 //#include "esdaudin.h"
 #include "audi_qt.h"
-#include "aextsdl.h"
 #include "audo_qt.h"
 #endif
 #if defined(DWYCO_IOS) || defined(MAC_CLIENT)
@@ -63,6 +65,9 @@
 #include "callsm.h"
 #include "resizeimage.h"
 #ifdef _Windows
+#define UNICODE
+#include <windows.h>
+#include <processthreadsapi.h>
 #include <time.h>
 #endif
 #include "dwycolist2.h"
@@ -86,8 +91,8 @@ DwycoCore *TheDwycoCore;
 static QQmlContext *TheRootCtx;
 QByteArray DwycoCore::My_uid;
 static int AvoidSSL = 0;
-typedef QHash<QByteArray, QByteArray> UID_ATTR_MAP;
-typedef QHash<QByteArray, QByteArray>::iterator UID_ATTR_MAP_ITER;
+typedef QMultiHash<QByteArray, QByteArray> UID_ATTR_MAP;
+typedef QMultiHash<QByteArray, QByteArray>::iterator UID_ATTR_MAP_ITER;
 static UID_ATTR_MAP Uid_attrs;
 static int Init_ok;
 
@@ -109,6 +114,8 @@ extern int HasCamera;
 extern int HasCamHardware;
 static QNetworkAccessManager *Net_access;
 
+int DwycoCore::Android_migrate;
+
 // kluge
 QByteArray Clbot(QByteArray::fromHex("59501a2f37bec3993f0d"));
 
@@ -186,6 +193,14 @@ takeover_from_background(int port)
     }
 }
 
+void
+start_desktop_background()
+{
+#if !defined(ANDROID) && !defined(DWYCO_IOS)
+    QProcess::startDetached(QCoreApplication::applicationDirPath() + QDir::separator() + QString("dwycobg"), QStringList(QString::number(BGLockPort)), User_pfx_native);
+#endif
+}
+
 static
 QImage
 transpose(const QImage& src)
@@ -293,7 +308,7 @@ uid_attrs_clear()
 void
 uid_attrs_add(const QByteArray& uid, const QByteArray& attr)
 {
-    Uid_attrs.insertMulti(uid, attr);
+    Uid_attrs.insert(uid, attr);
 }
 
 void
@@ -807,7 +822,7 @@ DwycoCore::strip_html(QString txt)
     // as needed, but that would involve finding all those places the
     // text was used,which is a pain right now
 
-    QRegularExpression re("http.*?://([^\\s)\\\"](?!ttp:))+");
+    static QRegularExpression re("http.*?://([^\\s)\\\"](?!ttp:))+");
 
 //    bool v = re.isValid();
 
@@ -901,26 +916,223 @@ DwycoCore::name_to_uid(QString handle)
     dwyco_name_to_uid(b.constData(), b.length());
 }
 
+// if they installed externally, copy the files in to the local
+// app storage, and rename the data folder.
+// this should only need to be done once, and the process should be
+// exited immediately after doing the dir name swap
+//
+// both dirs should be absolute paths (this appears to be ok with current
+// version of android)
+// src_dir will be something like '/storage/emulated/yada/.../Documents'
+// target_pfx should be something for the internal storage for the app, usually
+// like '/data/com.dwyco.phoo/yada/files'
+// the files from src_dir are recursively copied into "target_pfx" + "/upg/"
+// and the migration should rename "upg" to dwyco/phoo as if doing
+// mv "target"+ "dwyco" "target" + "dwyco.old", in case it got created before
+// if "dwyco.old" already exists, try dwyco.old2, etc. only try a few before giving up.
+// mkdir target/phoo
+// mv target/upg target/dwyco/phoo
+//
 static
 void
-setup_locations()
+one_time_migrate(const QString& src_dir, const QString& target_pfx)
 {
-    QStandardPaths::StandardLocation filepath = QStandardPaths::DocumentsLocation;
+    QDirIterator di(src_dir, QDir::Files|QDir::NoDotAndDotDot|QDir::Hidden, QDirIterator::Subdirectories);
+    //QString target_pfx = "/home/dwight/Downloads/";
+    while(di.hasNext())
+    {
+        QString sfn = di.next();
+        QString dfn = sfn;
+        int i = dfn.indexOf("dwyco/phoo");
+        if(i != -1)
+        {
+            dfn.remove(0, i + 11);
+            dfn.prepend("/");
+            dfn.prepend(target_pfx);
+            QString path = dfn;
+            path.truncate(path.lastIndexOf("/"));
+            //printf("%s\n", path.toLatin1().constData());
+            QDir d(path);
+            d.mkpath(path);
+        }
+        //printf("%s %s\n", sfn.toLatin1().constData(), dfn.toLatin1().constData());
+        QFile::copy(sfn, dfn);
+    }
+}
+
+void
+DwycoCore::one_time_copy_files()
+{
+    QString src = QStandardPaths::writableLocation(QStandardPaths::DocumentsLocation);
+    src += "/dwyco/phoo";
+    QString dst = QStandardPaths::writableLocation(QStandardPaths::AppDataLocation);
+    dst += "/dwyco/upg";
+    one_time_migrate(src, dst);
+    //QThread::sleep(10);
+}
+
+void
+DwycoCore::background_migrate()
+{
+    // sigh, this won't compile with android ndk's up to 23.2
+    //QThread *q = QThread::create(DwycoCore::one_time_copy_files);
+    auto q = new fuck_me_with_a_brick;
+    connect(q, SIGNAL(finished()), this, SIGNAL(migration_complete()));
+    q->start();
+}
+
+void
+DwycoCore::background_reindex()
+{
+    auto q = new fuck_me_with_a_brick2;
+    connect(q, SIGNAL(finished()), this, SIGNAL(reindex_complete()));
+    q->start();
+}
+
+void
+DwycoCore::do_reindex()
+{
+    dwyco_init();
+    dwyco_exit();
+    //QThread::sleep(10);
+}
+
+QUrl
+DwycoCore::from_local_file(const QString& s)
+{
+    return QUrl::fromLocalFile(s);
+}
+
+QString
+DwycoCore::to_local_file(const QUrl& u)
+{
+    return u.toLocalFile();
+}
+
+void
+DwycoCore::directory_swap()
+{
+    // note: we update the User_pfx so we can update the settings file to
+    // flag that it has been migrated.
+    // then rename the "upg" to "phoo"
+    QString src = QStandardPaths::writableLocation(QStandardPaths::AppDataLocation);
+    src += "/dwyco/upg";
+    QDir dsrc(src);
+    if(!dsrc.exists())
+        return;
+    // if the target already exists, it might be a partial migration, try to get
+    // rid of it
+    QString dst = QStandardPaths::writableLocation(QStandardPaths::AppDataLocation);
+    dst += "/dwyco/phoo";
+    QDir ddst(dst);
+    if(ddst.exists())
+    {
+        int i;
+        for(i = 0; i < 10; ++i)
+            if(ddst.rename(dst, dst + "." + QString::number(i)))
+                break;
+        if(i == 10)
+            return;
+    }
+    User_pfx = src.toUtf8();
+    settings_load();
+    setting_put("android-migrate", "done");
+    if(!dsrc.rename(src, dst))
+        cdcxpanic("failed migration");
+
+}
+
 #ifdef ANDROID
-    filepath = QStandardPaths::AppDataLocation;
-    if(QtAndroid::checkPermission("android.permission.READ_EXTERNAL_STORAGE") == QtAndroid::PermissionResult::Denied)
+static
+QStandardPaths::StandardLocation
+determine_android_migration()
+{
+    QStandardPaths::StandardLocation filepath = QStandardPaths::AppDataLocation;
+
+    QString localdir = QStandardPaths::writableLocation(QStandardPaths::AppDataLocation);
+    localdir += "/dwyco/phoo/";
+    User_pfx = localdir.toUtf8();
+    if(!settings_load())
     {
-        // we aren't going anywhere without being able to setup our state
-        QtAndroid::PermissionResultMap m = QtAndroid::requestPermissionsSync(QStringList("android.permission.READ_EXTERNAL_STORAGE"));
-        if(m.value("android.permission.READ_EXTERNAL_STORAGE") == QtAndroid::PermissionResult::Denied)
+        // either new or they have something in documents that needs to be migrated
+        QString src = QStandardPaths::writableLocation(QStandardPaths::DocumentsLocation);
+        src += "/dwyco/phoo";
+        User_pfx = src.toUtf8();
+
+        bool check_for_update = false;
+
+        if(QtAndroid::checkPermission("android.permission.READ_EXTERNAL_STORAGE") == QtAndroid::PermissionResult::Denied)
         {
-            // this needs to be thought out a little more... if you deny this, you can't
-            // access your photos on the device easily. maybe need to just request "read"
-            // in this case.
-            //filepath = QStandardPaths::AppDataLocation;
-            //exit(0);
+            // if they let us, check if there is anything out there
+            QtAndroid::PermissionResultMap m = QtAndroid::requestPermissionsSync(QStringList("android.permission.READ_EXTERNAL_STORAGE"));
+            if(m.value("android.permission.READ_EXTERNAL_STORAGE") == QtAndroid::PermissionResult::Denied)
+            {
+
+            }
+            else
+            {
+                check_for_update = true;
+            }
+        }
+        else
+            check_for_update = true;
+
+        if(check_for_update && settings_load())
+        {
+            // do the migration
+            if(QtAndroid::checkPermission("android.permission.WRITE_EXTERNAL_STORAGE") == QtAndroid::PermissionResult::Denied)
+            {
+                // we aren't going anywhere without being able to setup our state
+                QtAndroid::PermissionResultMap m = QtAndroid::requestPermissionsSync(QStringList("android.permission.WRITE_EXTERNAL_STORAGE"));
+                if(m.value("android.permission.WRITE_EXTERNAL_STORAGE") == QtAndroid::PermissionResult::Denied)
+                {
+                    // this needs to be thought out a little more... if you deny this, you can't
+                    // access your photos on the device easily. maybe need to just request "read"
+                    // in this case.
+                    filepath = QStandardPaths::AppDataLocation;
+                }
+                else
+                {
+                    filepath = QStandardPaths::DocumentsLocation;
+                    DwycoCore::Android_migrate = 1;
+                }
+                if(QtAndroid::checkPermission("android.permission.READ_EXTERNAL_STORAGE") == QtAndroid::PermissionResult::Denied)
+                {
+                    // we aren't going anywhere without being able to setup our state
+                    QtAndroid::PermissionResultMap m = QtAndroid::requestPermissionsSync(QStringList("android.permission.READ_EXTERNAL_STORAGE"));
+                    if(m.value("android.permission.READ_EXTERNAL_STORAGE") == QtAndroid::PermissionResult::Denied)
+                    {
+                        // can't do migration, we'll probably crash soon since we won't be able to get
+                        // access to documents location.
+                    }
+                    else
+                    {
+                        filepath = QStandardPaths::DocumentsLocation;
+                        DwycoCore::Android_migrate = 1;
+                    }
+                }
+
+            }
+            else
+            {
+                filepath = QStandardPaths::DocumentsLocation;
+                DwycoCore::Android_migrate = 1;
+            }
         }
     }
+    return filepath;
+}
+#endif
+
+static
+void
+setup_locations()
+{
+    QStandardPaths::StandardLocation filepath = QStandardPaths::DocumentsLocation;
+//QStandardPaths::StandardLocation filepath = QStandardPaths::AppDataLocation;
+    //DwycoCore::Android_migrate = 1;
+#ifdef ANDROID
+    filepath = determine_android_migration();
 #endif
     //
     QStringList args = QGuiApplication::arguments();
@@ -935,7 +1147,7 @@ setup_locations()
         userdir = args[1];
         userdir += "/";
     }
-    //QString userdir("/home/dwight/Downloads/n7phoo/");
+
     {
         QDir d(userdir);
         d.mkpath(userdir);
@@ -947,6 +1159,10 @@ setup_locations()
         f.putChar(0);
         f.close();
     }
+    {
+        QDir shares(userdir + "shares");
+        shares.mkpath(userdir + "shares");
+    }
 #ifdef ANDROID
     QFile::copy("assets:/dwyco.dh", userdir + "dwyco.dh");
     QFile::copy("assets:/dsadwyco.pub", userdir + "dsadwyco.pub");
@@ -966,27 +1182,40 @@ setup_locations()
     QFile::copy("assets:/v21.ver", userdir + "v21.ver");
     QFile::copy("assets:/zap.wav", userdir + "zap.wav");
 #else
-    QFile::copy(":androidinst/assets/dwyco.dh", userdir + "dwyco.dh");
-    QFile::copy(":androidinst/assets/dsadwyco.pub", userdir + "dsadwyco.pub");
-    QFile::copy(":androidinst/assets/license.txt", userdir + "license.txt");
+    QFile::copy(":androidinst2/assets/dwyco.dh", userdir + "dwyco.dh");
+    QFile::copy(":androidinst2/assets/dsadwyco.pub", userdir + "dsadwyco.pub");
+    QFile::copy(":androidinst2/assets/license.txt", userdir + "license.txt");
     QFile::remove(userdir + "no_img.png");
-    QFile::copy(":androidinst/assets/no_img.png", userdir + "no_img.png");
-    QFile::copy(":androidinst/assets/online.wav", userdir + "online.wav");
-    QFile::copy(":androidinst/assets/relaxed-call.wav", userdir + "relaxed-call.wav");
-    QFile::copy(":androidinst/assets/relaxed-incoming.wav", userdir + "relaxed-incoming.wav");
-    QFile::copy(":androidinst/assets/relaxed-online.wav", userdir + "relaxed-online.wav");
-    QFile::copy(":androidinst/assets/relaxed-zap.wav", userdir + "relaxed-zap.wav");
+    QFile::copy(":androidinst2/assets/no_img.png", userdir + "no_img.png");
+    QFile::copy(":androidinst2/assets/online.wav", userdir + "online.wav");
+    QFile::copy(":androidinst2/assets/relaxed-call.wav", userdir + "relaxed-call.wav");
+    QFile::copy(":androidinst2/assets/relaxed-incoming.wav", userdir + "relaxed-incoming.wav");
+    QFile::copy(":androidinst2/assets/relaxed-online.wav", userdir + "relaxed-online.wav");
+    QFile::copy(":androidinst2/assets/relaxed-zap.wav", userdir + "relaxed-zap.wav");
     if(!QFile(userdir + "servers2").exists())
-        QFile::copy(":androidinst/assets/servers2", userdir + "servers2");
+        QFile::copy(":androidinst2/assets/servers2", userdir + "servers2");
     QFile::setPermissions(userdir + "servers2", QFile::ReadOwner|QFile::WriteOwner);
-    QFile::copy(":androidinst/assets/space-call.wav", userdir + "space-call.wav");
-    QFile::copy(":androidinst/assets/space-incoming.wav", userdir + "space-incoming.wav");
-    QFile::copy(":androidinst/assets/space-online.wav", userdir + "space-online.wav");
-    QFile::copy(":androidinst/assets/space-zap.wav", userdir + "space-zap.wav");
-    QFile::copy(":androidinst/assets/v21.ver", userdir + "v21.ver");
-    QFile::copy(":androidinst/assets/zap.wav", userdir + "zap.wav");
+    QFile::copy(":androidinst2/assets/space-call.wav", userdir + "space-call.wav");
+    QFile::copy(":androidinst2/assets/space-incoming.wav", userdir + "space-incoming.wav");
+    QFile::copy(":androidinst2/assets/space-online.wav", userdir + "space-online.wav");
+    QFile::copy(":androidinst2/assets/space-zap.wav", userdir + "space-zap.wav");
+    QFile::copy(":androidinst2/assets/v21.ver", userdir + "v21.ver");
+    QFile::copy(":androidinst2/assets/zap.wav", userdir + "zap.wav");
+#ifdef _WIN32
+    // kluge for windows, we copy the notify-send.exe thing into the
+    // data directory so the background processor can execute it.
+    // there are a bunch of ways i could do this:
+    // * putting notify-send.exe into resources (would have to do it conditionally)
+    // * telling dwycobg to take an arg/env var to say where the notify-send thing is
+    // * have the installer put notify-send into documents dir (installer doesn't currently know
+    //  anything about target data dir in phoo, like it does in cdc-x. updates might be
+    //  problematic as well.
+    QFile::copy(QCoreApplication::applicationDirPath() + "/notify-send.exe", userdir + "notify-send.exe");
+#endif
 #endif
-    dwyco_set_fn_prefixes(userdir.toLatin1().constData(), userdir.toLatin1().constData(), QString(userdir + "tmp/").toLatin1().constData());
+    QString native_userdir = QDir::toNativeSeparators(userdir);
+    QString native_tmp = QDir::toNativeSeparators(userdir + "tmp/");
+    dwyco_set_fn_prefixes(native_userdir.toLatin1().constData(), native_userdir.toLatin1().constData(), native_tmp.toLatin1().constData());
     // can't do this call until prefixes are set since it wants to init the log file
     dwyco_trace_init();
     {
@@ -998,15 +1227,21 @@ setup_locations()
         int len_tmp = sizeof(tmp);
 
         dwyco_get_fn_prefixes(sys, &len_sys, user, &len_user, tmp, &len_tmp);
-        Sys_pfx = QByteArray(sys, len_sys - 1);
-        User_pfx = QByteArray(user, len_user - 1);
-        Tmp_pfx = QByteArray(tmp, len_tmp - 1);
-        if(Sys_pfx.length() == 0)
+        Sys_pfx_native = QByteArray(sys, len_sys - 1);
+        User_pfx_native = QByteArray(user, len_user - 1);
+        Tmp_pfx_native = QByteArray(tmp, len_tmp - 1);
+        if(Sys_pfx_native.length() == 0)
             Sys_pfx = ".";
-        if(User_pfx.length() == 0)
+        else
+            Sys_pfx = QDir::fromNativeSeparators(Sys_pfx_native).toLatin1();
+        if(User_pfx_native.length() == 0)
             User_pfx = ".";
-        if(Tmp_pfx.length() == 0)
+        else
+            User_pfx = QDir::fromNativeSeparators(User_pfx_native).toLatin1();
+        if(Tmp_pfx_native.length() == 0)
             Tmp_pfx = ".";
+        else
+            Tmp_pfx = QDir::fromNativeSeparators(Tmp_pfx_native).toLatin1();
 
     }
 
@@ -1462,6 +1697,7 @@ DwycoCore::init()
     dwyco_set_video_display_callback(dwyco_video_make_image);
     dwyco_set_user_control_callback(dwyco_user_control);
     dwyco_set_emergency_callback(dwyco_emergency);
+    dwyco_set_disposition("foreground", 10);
     //dwyco_set_chat_server_status_callback(dwyco_chat_server_status);
 
 #if ((defined(LINUX)) || defined(DWYCO_IOS)) && !defined(NO_DWYCO_AUDIO)
@@ -1592,6 +1828,8 @@ DwycoCore::init()
     dwyco_set_setting("zap/always_server", "0");
     dwyco_set_setting("call_acceptance/auto_accept", "0");
     dwyco_set_setting("net/listen", "1");
+    dwyco_set_setting("net/app_id", "phoo");
+    dwyco_set_setting("net/broadcast_port", "48903");
 
     new profpv;
     // the order of these is important, you have to clear the cache
@@ -1711,6 +1949,34 @@ DwycoCore::init()
         clear_unviewed_msgs();
         setting_put("bugfix1", "");
     }
+
+    update_android_backup_available(dwyco_get_android_backup_state());
+
+}
+
+int
+DwycoCore::load_backup()
+{
+    int ret = dwyco_restore_android_backup();
+    return ret;
+}
+
+int
+DwycoCore::get_android_backup_state()
+{
+    return dwyco_get_android_backup_state();
+}
+
+QString
+DwycoCore::map_to_representative(const QString& uid)
+{
+    QByteArray b = uid.toLatin1();
+    b = QByteArray::fromHex(b);
+    DWYCO_LIST urep;
+    dwyco_map_uid_to_representative(b.constData(), b.length(), &urep);
+    simple_scoped qurep(urep);
+    b = qurep.get<QByteArray>(0);
+    return b.toHex();
 }
 
 void
@@ -2651,6 +2917,9 @@ DwycoCore::simple_send(QString recipient, QString msg)
         dwyco_delete_zap_composition(compid);
         return 0;
     }
+    // we sent them something, so sort them towards the top
+    // where needed
+    add_got_msg_from(ruid);
     return compid;
 }
 
@@ -2693,7 +2962,8 @@ send_contact_query(QList<QString> emails)
 {
     QByteArray fn = add_pfx(Tmp_pfx, random_fn());
     save_it(emails, fn.constData());
-    int compid = dwyco_make_file_zap_composition(fn.constData(), fn.length());
+    QByteArray fn_native = QDir::toNativeSeparators(fn).toLatin1();
+    int compid = dwyco_make_file_zap_composition(fn_native.constData(), fn_native.length());
     if(compid == 0)
         return;
 
@@ -2747,6 +3017,7 @@ DwycoCore::send_simple_cam_pic(QString recipient, QString msg, QString filename)
     QByteArray ruid = QByteArray::fromHex(recipient.toLatin1());
     QByteArray txt = msg.toUtf8();
     QByteArray fn = filename.toLatin1();
+    QByteArray fn_native = QDir::toNativeSeparators(filename).toLatin1();
 
     // if for some reason we can't strip out the exif stuff, then
     // don't send the image. it could be that it isn't a jpg file or something
@@ -2772,8 +3043,8 @@ DwycoCore::send_simple_cam_pic(QString recipient, QString msg, QString filename)
     dest = add_pfx(Tmp_pfx, dest);
     f.copy(dest);
     f.remove();
-
-    int compid = dwyco_make_file_zap_composition(dest.constData(), dest.length());
+    QByteArray dest_native = QDir::toNativeSeparators(dest).toLatin1();
+    int compid = dwyco_make_file_zap_composition(dest_native.constData(), dest_native.length());
     if(compid == 0)
     {
         QFile::remove(dest);
@@ -2793,6 +3064,150 @@ DwycoCore::send_simple_cam_pic(QString recipient, QString msg, QString filename)
     return compid;
 }
 
+namespace dwyco {
+// this is mostly for debugging, so for now, just dig in
+int init_netlog();
+void exit_netlog();
+}
+
+int
+DwycoCore::send_report(QString uid)
+{
+    QByteArray ruid = QByteArray::fromHex(uid.toLatin1());
+    dwyco::exit_netlog();
+    QByteArray filename = add_pfx(User_pfx, "netlog.sql");
+
+    char *rs;
+    dwyco_random_string2(&rs, 2);
+    QByteArray rsb(rs, 2);
+    dwyco_free_array(rs);
+    rsb = rsb.toHex();
+
+    QByteArray target = add_pfx(Tmp_pfx, QByteArray("nl") + rsb + ".sql");
+
+    QFile::remove(target);
+    if(!QFile::copy(filename, target))
+    {
+        dwyco::init_netlog();
+        return 0;
+    }
+    dwyco::init_netlog();
+
+    QByteArray target_native = QDir::toNativeSeparators(target).toLatin1();
+    int compid = dwyco_make_file_zap_composition(target_native.constData(), target_native.length());
+    if(compid == 0)
+    {
+        QFile::remove(target);
+        return 0;
+    }
+    if(!dwyco_zap_send5(compid, ruid.constData(), ruid.length(),
+                        "netlog", 6, 0, 0,
+                        0, 0)
+      )
+
+    {
+        dwyco_delete_zap_composition(compid);
+        QFile::remove(target);
+        return 0;
+    }
+    QFile::remove(target);
+    return compid;
+
+}
+
+#ifdef ANDROID
+QString
+DwycoCore::export_attachment(QString mid)
+{
+    QByteArray rmid = mid.toLatin1();
+    //QString userdir = QStandardPaths::writableLocation(QStandardPaths::AppDataLocation);
+    QByteArray userdir;
+    // note: on android, we export the attachment to a writable sub-directory called
+    // "shares", and the java android support stuff has a "fileprovider" that
+    // can share items from that directory via mediastore. it is the caller's
+    // responsibility to initiate the notification to mediastore to pick up the new image.
+    // on desktop, we don't need to do all this garbage, just write it to documents or
+    // pictures and we're done.
+    userdir = add_pfx(User_pfx, "shares");
+    // using the name in the message is dicey. it might be utf8, might be unicode,
+    // might be from case-sensitive fs, might not. almost certainly it is a security problem.
+    // so punt, and just create a random filename, and try to add a file extension if
+    // it looks like there is one.
+    DWYCO_SAVED_MSG_LIST sm;
+    if(dwyco_get_saved_message3(&sm, rmid.constData()) != DWYCO_GSM_SUCCESS)
+    {
+        return "";
+    }
+    simple_scoped qsm(sm);
+    if(qsm.is_nil(DWYCO_QM_BODY_FILE_ATTACHMENT))
+        return "";
+    QByteArray scary_fn = qsm.get<QByteArray>(DWYCO_QM_BODY_FILE_ATTACHMENT);
+    quint16 csum = qChecksum(scary_fn.constData(), scary_fn.length());
+    // look for file extension
+    int dot = scary_fn.lastIndexOf('.');
+    if(dot != -1)
+    {
+        scary_fn.remove(0, dot);
+    }
+    else
+        scary_fn = "";
+    // maybe try sticking a place name in here? just
+    // an idea
+    QByteArray dstfn("/phoo");
+    dstfn += QByteArray::number(csum, 16);
+    dstfn += scary_fn;
+    userdir += dstfn;
+    // note: this is probably broken on windows, have to check it out.
+    QByteArray lfn = QFile::encodeName(userdir);
+    if(!dwyco_copy_out_file_zap2(rmid.constData(), lfn.constData()))
+    {
+        return "";
+    }
+    return QFile::decodeName(lfn);
+}
+#else
+QString
+DwycoCore::export_attachment(QString mid)
+{
+    QByteArray rmid = mid.toLatin1();
+    QString userdir = QStandardPaths::writableLocation(QStandardPaths::DocumentsLocation);
+    // using the name in the message is dicey. it might be utf8, might be unicode,
+    // might be from case-sensitive fs, might not. almost certainly it is a security problem.
+    // so punt, and just create a random filename, and try to add a file extension if
+    // it looks like there is one.
+    DWYCO_SAVED_MSG_LIST sm;
+    if(dwyco_get_saved_message3(&sm, rmid.constData()) != DWYCO_GSM_SUCCESS)
+    {
+        return "";
+    }
+    simple_scoped qsm(sm);
+    if(qsm.is_nil(DWYCO_QM_BODY_FILE_ATTACHMENT))
+        return "";
+    QByteArray scary_fn = qsm.get<QByteArray>(DWYCO_QM_BODY_FILE_ATTACHMENT);
+    quint16 csum = qChecksum(scary_fn.constData(), scary_fn.length());
+    // look for file extension
+    int dot = scary_fn.lastIndexOf('.');
+    if(dot != -1)
+    {
+        scary_fn.remove(0, dot);
+    }
+    else
+        scary_fn = "";
+    QByteArray dstfn("/phooatt");
+    dstfn += QByteArray::number(csum, 16);
+    dstfn += scary_fn;
+    userdir += dstfn;
+    // note: this is probably broken on windows, have to check it out.
+    QByteArray lfn = QFile::encodeName(userdir);
+    if(!dwyco_copy_out_file_zap2(rmid.constData(), lfn.constData()))
+    {
+        return "";
+    }
+    return QFile::decodeName(lfn);
+}
+#endif
+
+
 int
 DwycoCore::make_zap_view(QString mid)
 {
diff --git a/phoo/dwyco_top.h b/phoo/dwyco_top.h
index e1af4b37c..5e1cf12f1 100644
--- a/phoo/dwyco_top.h
+++ b/phoo/dwyco_top.h
@@ -15,6 +15,7 @@
 #include <QVariant>
 #include <QUrl>
 #include <QNetworkReply>
+#include <QThread>
 #include "dlli.h"
 #include "QQmlVarPropertyHelpers.h"
 #include <QAbstractListModel>
@@ -54,6 +55,8 @@ class DwycoCore : public QObject
     QML_READONLY_VAR_PROPERTY(int, group_private_key_valid)
 
     QML_READONLY_VAR_PROPERTY(bool, invisible)
+    QML_READONLY_VAR_PROPERTY(int, android_migrate)
+    QML_READONLY_VAR_PROPERTY(int, android_backup_available)
 
 
 public:
@@ -79,8 +82,11 @@ public:
         m_eager_pull = 0;
         m_any_unviewed = false;
         m_invisible = false;
+        m_android_migrate = Android_migrate;
+        m_android_backup_available = 0;
     }
     static QByteArray My_uid;
+    static int Android_migrate;
 
 
     enum System_event {
@@ -142,12 +148,21 @@ public:
     Q_INVOKABLE void init();
     Q_INVOKABLE int service_channels();
     Q_INVOKABLE void exit() {
-        //dwyco_empty_trash();
-        //dwyco_power_clean_safe();
+        // note: this will clean some parts of the
+        // system that might be in use by the client
+        // as well, and ignore some parts. like files
+        // ending in .jpeg will not be removed from
+        // the tmp folder. it is probably a mistake
+        // for the client to be using the same tmp
+        // folder as the dwyco* api, since it might
+        // clean some things the client isn't expecting.
         dwyco_exit();
     }
 
     Q_INVOKABLE void power_clean() {
+        // note: this is disabled right now, pending some
+        // better definition of "clean". it doesn't jive
+        // with the syncing stuff we do now.
         dwyco_power_clean_safe();
     }
 
@@ -286,6 +301,27 @@ public:
     Q_INVOKABLE void set_badge_number(int i);
     Q_INVOKABLE void refresh_directory();
 
+    Q_INVOKABLE int send_report(QString uid);
+    Q_INVOKABLE QString export_attachment(QString mid);
+    static void one_time_copy_files();
+    Q_INVOKABLE void background_migrate();
+    Q_INVOKABLE void directory_swap();
+
+    // this can sometime take awhile, so we handle it in a thread, then
+    // cause the user to exit and restart
+    Q_INVOKABLE void background_reindex();
+    static void do_reindex();
+
+    Q_INVOKABLE QUrl from_local_file(const QString&);
+    Q_INVOKABLE QString to_local_file(const QUrl& url);
+
+    Q_INVOKABLE int load_backup();
+    Q_INVOKABLE int get_android_backup_state();
+
+    Q_INVOKABLE QString map_to_representative(const QString& uid);
+
+public:
+
 public slots:
     void app_state_change(Qt::ApplicationState);
     void update_dwyco_client_name(QString);
@@ -359,6 +395,8 @@ signals:
     void zap_stopped(int zid);
 
     void mid_tag_changed(QString mid);
+    void migration_complete();
+	void reindex_complete();
 
     void name_to_uid_result(QString uid, QString handle);
     // WARNING: DO NOT USE THESE QBYTEARRAY THINGS IN QML, they are not
@@ -374,4 +412,22 @@ private:
 
 };
 
+class fuck_me_with_a_brick : public QThread
+{
+    Q_OBJECT
+    void run() {
+        DwycoCore::one_time_copy_files();
+    }
+
+};
+
+class fuck_me_with_a_brick2 : public QThread
+{
+    Q_OBJECT
+    void run() {
+        DwycoCore::do_reindex();
+    }
+
+};
+
 #endif
diff --git a/phoo/icons.qrc b/phoo/icons.qrc
index dacd7f614..b7f14f451 100644
--- a/phoo/icons.qrc
+++ b/phoo/icons.qrc
@@ -329,5 +329,17 @@
         <file>icons/material/mdpi/ic_system_update_alt_white_24dp.png</file>
         <file>icons/material/xhdpi/ic_system_update_alt_black_24dp.png</file>
         <file>icons/material/xhdpi/ic_system_update_alt_white_24dp.png</file>
+        <file>icons/material/hdpi/ic_fullscreen_black_24dp.png</file>
+        <file>icons/material/hdpi/ic_fullscreen_exit_black_24dp.png</file>
+        <file>icons/material/hdpi/ic_fullscreen_exit_white_24dp.png</file>
+        <file>icons/material/hdpi/ic_fullscreen_white_24dp.png</file>
+        <file>icons/material/mdpi/ic_fullscreen_black_24dp.png</file>
+        <file>icons/material/mdpi/ic_fullscreen_exit_black_24dp.png</file>
+        <file>icons/material/mdpi/ic_fullscreen_exit_white_24dp.png</file>
+        <file>icons/material/mdpi/ic_fullscreen_white_24dp.png</file>
+        <file>icons/material/xhdpi/ic_fullscreen_black_24dp.png</file>
+        <file>icons/material/xhdpi/ic_fullscreen_exit_black_24dp.png</file>
+        <file>icons/material/xhdpi/ic_fullscreen_exit_white_24dp.png</file>
+        <file>icons/material/xhdpi/ic_fullscreen_white_24dp.png</file>
     </qresource>
 </RCC>
diff --git a/phoo/icons/material/hdpi/ic_fullscreen_black_24dp.png b/phoo/icons/material/hdpi/ic_fullscreen_black_24dp.png
new file mode 100644
index 000000000..57ff4f036
Binary files /dev/null and b/phoo/icons/material/hdpi/ic_fullscreen_black_24dp.png differ
diff --git a/phoo/icons/material/hdpi/ic_fullscreen_exit_black_24dp.png b/phoo/icons/material/hdpi/ic_fullscreen_exit_black_24dp.png
new file mode 100644
index 000000000..8328e2efe
Binary files /dev/null and b/phoo/icons/material/hdpi/ic_fullscreen_exit_black_24dp.png differ
diff --git a/phoo/icons/material/hdpi/ic_fullscreen_exit_white_24dp.png b/phoo/icons/material/hdpi/ic_fullscreen_exit_white_24dp.png
new file mode 100644
index 000000000..6c9d58d5d
Binary files /dev/null and b/phoo/icons/material/hdpi/ic_fullscreen_exit_white_24dp.png differ
diff --git a/phoo/icons/material/hdpi/ic_fullscreen_white_24dp.png b/phoo/icons/material/hdpi/ic_fullscreen_white_24dp.png
new file mode 100644
index 000000000..c150cb58d
Binary files /dev/null and b/phoo/icons/material/hdpi/ic_fullscreen_white_24dp.png differ
diff --git a/phoo/icons/material/mdpi/ic_fullscreen_black_24dp.png b/phoo/icons/material/mdpi/ic_fullscreen_black_24dp.png
new file mode 100644
index 000000000..3553d6a5d
Binary files /dev/null and b/phoo/icons/material/mdpi/ic_fullscreen_black_24dp.png differ
diff --git a/phoo/icons/material/mdpi/ic_fullscreen_exit_black_24dp.png b/phoo/icons/material/mdpi/ic_fullscreen_exit_black_24dp.png
new file mode 100644
index 000000000..c8394487c
Binary files /dev/null and b/phoo/icons/material/mdpi/ic_fullscreen_exit_black_24dp.png differ
diff --git a/phoo/icons/material/mdpi/ic_fullscreen_exit_white_24dp.png b/phoo/icons/material/mdpi/ic_fullscreen_exit_white_24dp.png
new file mode 100644
index 000000000..85cf27ece
Binary files /dev/null and b/phoo/icons/material/mdpi/ic_fullscreen_exit_white_24dp.png differ
diff --git a/phoo/icons/material/mdpi/ic_fullscreen_white_24dp.png b/phoo/icons/material/mdpi/ic_fullscreen_white_24dp.png
new file mode 100644
index 000000000..2d3bb49ba
Binary files /dev/null and b/phoo/icons/material/mdpi/ic_fullscreen_white_24dp.png differ
diff --git a/phoo/icons/material/xhdpi/ic_fullscreen_black_24dp.png b/phoo/icons/material/xhdpi/ic_fullscreen_black_24dp.png
new file mode 100644
index 000000000..917e418a9
Binary files /dev/null and b/phoo/icons/material/xhdpi/ic_fullscreen_black_24dp.png differ
diff --git a/phoo/icons/material/xhdpi/ic_fullscreen_exit_black_24dp.png b/phoo/icons/material/xhdpi/ic_fullscreen_exit_black_24dp.png
new file mode 100644
index 000000000..5fc3166ac
Binary files /dev/null and b/phoo/icons/material/xhdpi/ic_fullscreen_exit_black_24dp.png differ
diff --git a/phoo/icons/material/xhdpi/ic_fullscreen_exit_white_24dp.png b/phoo/icons/material/xhdpi/ic_fullscreen_exit_white_24dp.png
new file mode 100644
index 000000000..364bad0b8
Binary files /dev/null and b/phoo/icons/material/xhdpi/ic_fullscreen_exit_white_24dp.png differ
diff --git a/phoo/icons/material/xhdpi/ic_fullscreen_white_24dp.png b/phoo/icons/material/xhdpi/ic_fullscreen_white_24dp.png
new file mode 100644
index 000000000..4423c7ce9
Binary files /dev/null and b/phoo/icons/material/xhdpi/ic_fullscreen_white_24dp.png differ
diff --git a/phoo/ignoremodel.cpp b/phoo/ignoremodel.cpp
index f4c1ea61e..5d6266ed1 100644
--- a/phoo/ignoremodel.cpp
+++ b/phoo/ignoremodel.cpp
@@ -8,7 +8,6 @@
 */
 #include "ignoremodel.h"
 #include "dlli.h"
-#include "dwyco_new_msg.h"
 #include "getinfo.h"
 #include "dwycolist2.h"
 
diff --git a/phoo/ignoremodel.h b/phoo/ignoremodel.h
index 2f017fea8..86af9c567 100644
--- a/phoo/ignoremodel.h
+++ b/phoo/ignoremodel.h
@@ -59,12 +59,17 @@ class IgnoreSortFilterModel : public QSortFilterProxyModel
 
 public:
     IgnoreSortFilterModel(QObject *p = 0);
-    int count() const {
+    Q_INVOKABLE int count() const {
         if(sourceModel()) {
             return dynamic_cast<IgnoreListModel *>(sourceModel())->count();
         }
         return 0;
     }
+    Q_INVOKABLE void load_users_to_model() {
+        if(sourceModel()) {
+            dynamic_cast<IgnoreListModel *>(sourceModel())->load_users_to_model();
+        }
+    }
     //virtual bool lessThan(const QModelIndex& left, const QModelIndex& right) const;
 private:
     int m_count;
diff --git a/phoo/main.cpp b/phoo/main.cpp
index 8e018e4dd..eb8e84df4 100644
--- a/phoo/main.cpp
+++ b/phoo/main.cpp
@@ -23,6 +23,8 @@
 QQmlApplicationEngine *TheEngine;
 
 void dwyco_register_qml(QQmlContext *root);
+void start_desktop_background();
+
 #ifdef ANDROID
 NotificationClient *notificationClient;
 #endif
@@ -60,7 +62,7 @@ int main(int argc, char *argv[])
     QQuickStyle::setFallbackStyle("Material");
 #endif
 
-    qDebug() << QQuickStyle::availableStyles();
+    //qDebug() << QQuickStyle::availableStyles();
 
     // note: qt seems to use some of these names in constructing
     // file names. this can be a problem if different FS's with different
@@ -70,11 +72,7 @@ int main(int argc, char *argv[])
     // things like dropbox and btsync.
     QCoreApplication::setOrganizationName("dwyco");
     QCoreApplication::setOrganizationDomain("dwyco.com");
-    // if we run one copy of a cdc-x install on multiple machines,
-    // identify the settings for the machine by local hostname.
-    // this allows for differences in devices and stuff on that host.
-    QString LocalHostName = QHostInfo::localHostName();
-    QCoreApplication::setApplicationName(QString("phoo") + LocalHostName);
+    QCoreApplication::setApplicationName(QString("phoo"));
     QSettings::setDefaultFormat(QSettings::IniFormat);
     // note: need to set the path to the right place, same as fn_pfx for dll
     //QSettings::setPath(QSettings::IniFormat, QSettings::UserScope, FPATH);
@@ -125,8 +123,17 @@ int main(int argc, char *argv[])
 
 
     engine.rootContext()->setContextProperty("screenDpi", dpi);
+#ifdef DWYCO_DEBUG
+    engine.rootContext()->setContextProperty("dwyco_debug", true);
+#else
+    engine.rootContext()->setContextProperty("dwyco_debug", false);
+#endif
 
     engine.load(QUrl(QStringLiteral("qrc:/main.qml")));
 
-    return app.exec();
+    int ret;
+    ret = app.exec();
+    start_desktop_background();
+
+    return ret;
 }
diff --git a/phoo/main.qml b/phoo/main.qml
index 104c9387e..bf04f4a8d 100644
--- a/phoo/main.qml
+++ b/phoo/main.qml
@@ -39,7 +39,8 @@ ApplicationWindow {
         str += icon
         return str
     }
-
+    // attempt to convert an absolute length into the
+    // number of pixels on the screen
     function cm(cm){
         if(Screen.pixelDensity)
             return cm*Screen.pixelDensity*10
@@ -58,6 +59,10 @@ ApplicationWindow {
         console.warn("Could not calculate 'inch' based on Screen.pixelDensity.")
         return 0
     }
+    // takes a percent, and returns the number of pixels
+    // corresponding that percentage of the given dimension
+    // used when you just want to estimate that something should
+    // take a certain percentage of the screen
     function vw(i){
         if(Screen.width)
             return i*(Screen.width/100)
@@ -70,6 +75,7 @@ ApplicationWindow {
         console.warn("Could not calculate 'vh' based on Screen.height.")
         return 0
     }
+    font.pixelSize: {is_mobile ? Screen.pixelDensity * 2.5 : font.pixelSize}
     
     
     property color primary : "#673AB7"
@@ -250,6 +256,7 @@ ApplicationWindow {
 
 
     footer: RowLayout {
+        visible: dwyco_debug
             Label {
                 id: ind_invis
                 text: "Invis"
@@ -257,6 +264,12 @@ ApplicationWindow {
                 color: "red"
 
             }
+            Label {
+                text: "Archived " + (core.total_users - ConvListModel.count).toString()
+                visible: core.total_users > ConvListModel.count
+                color: "red"
+            }
+
             Item {
                 Layout.fillWidth: true
             }
@@ -401,6 +414,17 @@ ApplicationWindow {
             }
         }
     }
+    Loader {
+        id: restore_auto_backup
+        visible: false
+        active: visible
+        onVisibleChanged: {
+            if(visible) {
+                source = "qrc:/RestoreAutoBackup.qml"
+            }
+        }
+
+    }
 
     DevGroup {
         id: device_group
@@ -455,10 +479,6 @@ ApplicationWindow {
 
     }
 
-    ContactList {
-        id: contact_list
-        visible: false
-    }
 
     Loader {
         id: cqres
@@ -513,9 +533,26 @@ ApplicationWindow {
         visible: false
     }
 
-    ForwardToList {
+    Loader {
         id: forward_dialog
+        property string mid_to_forward
+        visible: false
+        active: visible
+        onVisibleChanged: {
+            if(visible)
+                source = "qrc:/ForwardToList.qml"
+        }
+    }
+
+    Loader {
+        id: send_multi_report
         visible: false
+        active: visible
+        onVisibleChanged: {
+            if(visible)
+                source = "qrc:/SendMulti.qml"
+        }
+
     }
 
     SimpleChatBox {
@@ -739,17 +776,17 @@ ApplicationWindow {
 
     SoundEffect {
         id: sound_sent
-        source: "qrc:/androidinst/assets/space-zap.wav"
+        source: "qrc:/androidinst2/assets/space-zap.wav"
     }
     SoundEffect {
         id: sound_recv
-        source: "qrc:/androidinst/assets/space-zap.wav"
+        source: "qrc:/androidinst2/assets/space-zap.wav"
         volume: {dwy_quiet ? 0.0 : 1.0}
         muted: dwy_quiet
     }
     SoundEffect {
         id: sound_alert
-        source: "qrc:/androidinst/assets/space-incoming.wav"
+        source: "qrc:/androidinst2/assets/space-incoming.wav"
         volume: {dwy_quiet ? 0.0 : 1.0}
         muted: dwy_quiet
     }
@@ -768,6 +805,16 @@ ApplicationWindow {
         
     }
 
+    Migrate {
+        id: migrate_page
+        visible: false
+    }
+
+    Reindex {
+        id: background_reindex
+        visible: false
+    }
+
     DwycoCore {
         id: core
         property int is_database_online: -1
@@ -776,14 +823,27 @@ ApplicationWindow {
         objectName: "dwyco_singleton"
         client_name: {"QML-" + Qt.platform.os + "-" + core.buildtime}
         Component.onCompleted: {
+            if(core.android_migrate === 1)
+            {
+                stack.push(migrate_page)
+                return
+            }
             var a
             a = get_local_setting("first-run")
             if(a === "") {
                 //profile_dialog.visible = true
+                // don't need a reindex_complete
+                set_local_setting("reindex1", "1")
                 stack.push(convlist)
                 stack.push(blank_page)
                 stack.push(profile_dialog)
             } else {
+                a = get_local_setting("reindex1")
+                if(a === "")
+                {
+                    stack.push(background_reindex)
+                    return
+                }
                 stack.push(convlist)
                 profile_bootstrapped = 1
                 pwdialog.state = "start"
@@ -867,7 +927,7 @@ ApplicationWindow {
 
         onNew_msg: {
             console.log("new msglist ", themsglist.uid, ' ', from_uid, " ", mid)
-            if(from_uid === themsglist.uid) {
+            if(from_uid === themsglist.uid || core.map_to_representative(from_uid) === core.map_to_representative(themsglist.uid)) {
                 themsglist.reload_model();
                 // note: this could be annoying if the person is
                 // browsing back, need to check to see if so and not
@@ -884,7 +944,7 @@ ApplicationWindow {
 
         onSys_msg_idx_updated: {
             console.log("upd " + uid + " " + themsglist.uid)
-            if(uid === themsglist.uid) {
+            if(uid === themsglist.uid || core.map_to_representative(uid) === core.map_to_representative(themsglist.uid)) {
                 themsglist.reload_model()
 
                 console.log("RELOAD msg_idx")
@@ -896,7 +956,7 @@ ApplicationWindow {
             //hwtext.text = status
             if(status == DwycoCore.MSG_SEND_SUCCESS) {
                 //sound_sent.play()
-                if(themsglist.uid == recipient) {
+                if(themsglist.uid == recipient || core.map_to_representative(themsglist.uid) === core.map_to_representative(recipient)) {
                     themsglist.reload_model()
 
                 }
@@ -950,7 +1010,6 @@ ApplicationWindow {
             else
                 set_badge_number(0)
         }
-
     }
 
     Rectangle {
@@ -1011,14 +1070,14 @@ ApplicationWindow {
             // which isn't really necessary.
             var sc_next = core.service_channels()
             //console.log("next ", sc_next)
-//            if(sc_next === 1 || sc_next < 0)
-//            {
-//                service_timer.interval = 1
-//            }
-//            else
-//            {
-//                service_timer.interval = (sc_next === 0 ? 100 : Math.min(100, sc_next))
-//            }
+            if(sc_next === 1 || sc_next < 0)
+            {
+                service_timer.interval = 1
+            }
+            else
+            {
+                service_timer.interval = (sc_next === 0 ? 100 : Math.min(100, sc_next))
+            }
         }
 
     }
diff --git a/phoo/msglistmodel.cpp b/phoo/msglistmodel.cpp
index 0b62cb08e..05805fd83 100644
--- a/phoo/msglistmodel.cpp
+++ b/phoo/msglistmodel.cpp
@@ -23,6 +23,10 @@
 #include "dwyco_new_msg.h"
 #include "dwyco_top.h"
 
+#if defined(LINUX) && !(defined(ANDROID) || defined(MACOSX))
+#define LINUX_EMOJI_CRASH_HACK
+#endif
+
 class DwycoCore;
 extern DwycoCore *TheDwycoCore;
 
@@ -876,7 +880,11 @@ msglist_raw::qd_data ( int r, int role ) const
         DWYCO_LIST ba = dwyco_get_body_array(qsm);
         simple_scoped qba(ba);
         QByteArray txt = qba.get<QByteArray>(0, DWYCO_QM_BODY_NEW_TEXT2);
-        return QString(txt);
+#ifdef LINUX_EMOJI_CRASH_HACK
+        return QString::fromLatin1(txt);
+#else
+        return QString::fromUtf8(txt);
+#endif
     }
     case SENT:
         return 1;
@@ -1343,12 +1351,20 @@ msglist_raw::get_msg_text(int row) const
             return "";
         simple_scoped qbt(bt);
         auto ftxt = qbt.get<QByteArray>(0);
+#ifdef LINUX_EMOJI_CRASH_HACK
         return QString::fromLatin1(get_extended(ftxt));
+#else
+        return QString::fromUtf8(get_extended(ftxt));
+#endif
     }
 
 
     auto txt = qba.get<QByteArray>(0, DWYCO_QM_BODY_NEW_TEXT2);
+#ifdef LINUX_EMOJI_CRASH_HACK
     return QString::fromLatin1(get_extended(txt));
+#else
+    return QString::fromUtf8(get_extended(txt));
+#endif
 }
 
 QString
diff --git a/phoo/msgpv.cpp b/phoo/msgpv.cpp
index 3e2d8d588..548286b1d 100644
--- a/phoo/msgpv.cpp
+++ b/phoo/msgpv.cpp
@@ -13,6 +13,7 @@
 #include <QImage>
 #include <QFileDevice>
 #include <QMap>
+#include <QDir>
 #include "pfx.h"
 #include "msgpv.h"
 #include "dwycolist2.h"
@@ -105,7 +106,8 @@ preview_saved_msg(const QByteArray& mid, QByteArray& preview_fn, int& file, QByt
             // copy file out to random user_filename, scaling to preview size
             rfn = add_pfx(Tmp_pfx, rfn);
             full_size_filename = rfn;
-            if(!dwyco_copy_out_file_zap2(mid.constData(), rfn.constData()))
+            QByteArray rfn_native = QDir::toNativeSeparators(rfn).toLatin1();
+            if(!dwyco_copy_out_file_zap2(mid.constData(), rfn_native.constData()))
                 throw 0;
             preview_fn = rfn;
         }
@@ -215,7 +217,8 @@ preview_msg_body(DWYCO_SAVED_MSG_LIST qsm, QByteArray& preview_fn, int& file, QB
             // copy file out to random user_filename, scaling to preview size
             rfn = add_pfx(Tmp_pfx, rfn);
             full_size_filename = rfn;
-            if(!dwyco_copy_out_qd_file_zap(sm, rfn.constData()))
+            QByteArray rfn_native = QDir::toNativeSeparators(rfn).toLatin1();
+            if(!dwyco_copy_out_qd_file_zap(sm, rfn_native.constData()))
                 throw 0;
 
             preview_fn = rfn;
diff --git a/phoo/notificationclient.cpp b/phoo/notificationclient.cpp
index d951d2f33..bf04d5a59 100644
--- a/phoo/notificationclient.cpp
+++ b/phoo/notificationclient.cpp
@@ -34,6 +34,7 @@
 #include "notificationclient.h"
 
 #include <QtAndroidExtras/QAndroidJniObject>
+#include <QtAndroidExtras>
 
 NotificationClient::NotificationClient(QObject *parent)
     : QObject(parent)
@@ -170,6 +171,20 @@ NotificationClient::set_user_property(QString name, QString value)
                                               );
 }
 
+void
+NotificationClient::share_to_mediastore(QString filename)
+{
+    QAndroidJniObject jname = QAndroidJniObject::fromString(filename);
+
+
+    QAndroidJniObject::callStaticMethod<void>("com/dwyco/android/NotificationClient",
+                                              "notifyMediaStoreScanner",
+                                              "(Ljava/lang/String;)V",
+
+                                              jname.object<jstring>()
+                                              );
+}
+
 void
 NotificationClient::load_contacts()
 {
@@ -180,14 +195,22 @@ NotificationClient::load_contacts()
 
 }
 
-void
+int
 NotificationClient::open_image()
 {
+    if(QtAndroid::checkPermission("android.permission.READ_EXTERNAL_STORAGE") == QtAndroid::PermissionResult::Denied)
+    {
+        QtAndroid::PermissionResultMap m = QtAndroid::requestPermissionsSync(QStringList("android.permission.READ_EXTERNAL_STORAGE"));
+        if(m.value("android.permission.READ_EXTERNAL_STORAGE") == QtAndroid::PermissionResult::Denied)
+        {
+            return 0;
+        }
+    }
     QAndroidJniObject::callStaticMethod<void>(
         "com/dwyco/android/NotificationClient",
         "openAnImage"
     );
-
+    return 1;
 }
 
 void
diff --git a/phoo/notificationclient.h b/phoo/notificationclient.h
index 9bb0d4a9e..2960d7993 100644
--- a/phoo/notificationclient.h
+++ b/phoo/notificationclient.h
@@ -60,12 +60,13 @@ public slots:
     void set_service_params(int port, QString sys_pfx, QString user_pfx, QString tmp_pfx);
     void start_background();
     void load_contacts();
-    void open_image();
+    int open_image();
     void vibrate(long ms);
     void log_event();
     void log_event2(QString name, QString method);
     void set_user_property(QString name, QString value);
     void set_lastrun();
+    void share_to_mediastore(QString filename);
 
 private:
     QString m_notification;
diff --git a/phoo/androidinst/AndroidManifest.xml b/phoo/old/androidinst/AndroidManifest.xml
similarity index 100%
rename from phoo/androidinst/AndroidManifest.xml
rename to phoo/old/androidinst/AndroidManifest.xml
diff --git a/phoo/androidinst/assets/dsadwyco.pub b/phoo/old/androidinst/assets/dsadwyco.pub
similarity index 100%
rename from phoo/androidinst/assets/dsadwyco.pub
rename to phoo/old/androidinst/assets/dsadwyco.pub
diff --git a/phoo/androidinst/assets/dwyco.dh b/phoo/old/androidinst/assets/dwyco.dh
similarity index 100%
rename from phoo/androidinst/assets/dwyco.dh
rename to phoo/old/androidinst/assets/dwyco.dh
diff --git a/phoo/androidinst/assets/license.txt b/phoo/old/androidinst/assets/license.txt
similarity index 100%
rename from phoo/androidinst/assets/license.txt
rename to phoo/old/androidinst/assets/license.txt
diff --git a/phoo/androidinst/assets/no_img.png b/phoo/old/androidinst/assets/no_img.png
similarity index 100%
rename from phoo/androidinst/assets/no_img.png
rename to phoo/old/androidinst/assets/no_img.png
diff --git a/phoo/androidinst/assets/no_img_old.png b/phoo/old/androidinst/assets/no_img_old.png
similarity index 100%
rename from phoo/androidinst/assets/no_img_old.png
rename to phoo/old/androidinst/assets/no_img_old.png
diff --git a/phoo/androidinst/assets/online.wav b/phoo/old/androidinst/assets/online.wav
similarity index 100%
rename from phoo/androidinst/assets/online.wav
rename to phoo/old/androidinst/assets/online.wav
diff --git a/phoo/androidinst/assets/relaxed-call.wav b/phoo/old/androidinst/assets/relaxed-call.wav
similarity index 100%
rename from phoo/androidinst/assets/relaxed-call.wav
rename to phoo/old/androidinst/assets/relaxed-call.wav
diff --git a/phoo/androidinst/assets/relaxed-incoming.wav b/phoo/old/androidinst/assets/relaxed-incoming.wav
similarity index 100%
rename from phoo/androidinst/assets/relaxed-incoming.wav
rename to phoo/old/androidinst/assets/relaxed-incoming.wav
diff --git a/phoo/androidinst/assets/relaxed-online.wav b/phoo/old/androidinst/assets/relaxed-online.wav
similarity index 100%
rename from phoo/androidinst/assets/relaxed-online.wav
rename to phoo/old/androidinst/assets/relaxed-online.wav
diff --git a/phoo/androidinst/assets/relaxed-zap.wav b/phoo/old/androidinst/assets/relaxed-zap.wav
similarity index 100%
rename from phoo/androidinst/assets/relaxed-zap.wav
rename to phoo/old/androidinst/assets/relaxed-zap.wav
diff --git a/phoo/androidinst/assets/servers2 b/phoo/old/androidinst/assets/servers2
similarity index 100%
rename from phoo/androidinst/assets/servers2
rename to phoo/old/androidinst/assets/servers2
diff --git a/phoo/androidinst/assets/servers2.local b/phoo/old/androidinst/assets/servers2.local
similarity index 100%
rename from phoo/androidinst/assets/servers2.local
rename to phoo/old/androidinst/assets/servers2.local
diff --git a/phoo/androidinst/assets/servers2.prod b/phoo/old/androidinst/assets/servers2.prod
similarity index 100%
rename from phoo/androidinst/assets/servers2.prod
rename to phoo/old/androidinst/assets/servers2.prod
diff --git a/phoo/androidinst/assets/space-call.wav b/phoo/old/androidinst/assets/space-call.wav
similarity index 100%
rename from phoo/androidinst/assets/space-call.wav
rename to phoo/old/androidinst/assets/space-call.wav
diff --git a/phoo/androidinst/assets/space-incoming.wav b/phoo/old/androidinst/assets/space-incoming.wav
similarity index 100%
rename from phoo/androidinst/assets/space-incoming.wav
rename to phoo/old/androidinst/assets/space-incoming.wav
diff --git a/phoo/androidinst/assets/space-online.wav b/phoo/old/androidinst/assets/space-online.wav
similarity index 100%
rename from phoo/androidinst/assets/space-online.wav
rename to phoo/old/androidinst/assets/space-online.wav
diff --git a/phoo/androidinst/assets/space-zap.wav b/phoo/old/androidinst/assets/space-zap.wav
similarity index 100%
rename from phoo/androidinst/assets/space-zap.wav
rename to phoo/old/androidinst/assets/space-zap.wav
diff --git a/phoo/androidinst/assets/v21.ver b/phoo/old/androidinst/assets/v21.ver
similarity index 100%
rename from phoo/androidinst/assets/v21.ver
rename to phoo/old/androidinst/assets/v21.ver
diff --git a/phoo/androidinst/assets/zap.wav b/phoo/old/androidinst/assets/zap.wav
similarity index 100%
rename from phoo/androidinst/assets/zap.wav
rename to phoo/old/androidinst/assets/zap.wav
diff --git a/phoo/androidinst/build.gradle b/phoo/old/androidinst/build.gradle
similarity index 100%
rename from phoo/androidinst/build.gradle
rename to phoo/old/androidinst/build.gradle
diff --git a/phoo/androidinst/google-services.json b/phoo/old/androidinst/google-services.json
similarity index 100%
rename from phoo/androidinst/google-services.json
rename to phoo/old/androidinst/google-services.json
diff --git a/phoo/androidinst/gradle/wrapper/gradle-wrapper.jar b/phoo/old/androidinst/gradle/wrapper/gradle-wrapper.jar
similarity index 100%
rename from phoo/androidinst/gradle/wrapper/gradle-wrapper.jar
rename to phoo/old/androidinst/gradle/wrapper/gradle-wrapper.jar
diff --git a/phoo/androidinst/gradle/wrapper/gradle-wrapper.properties b/phoo/old/androidinst/gradle/wrapper/gradle-wrapper.properties
similarity index 100%
rename from phoo/androidinst/gradle/wrapper/gradle-wrapper.properties
rename to phoo/old/androidinst/gradle/wrapper/gradle-wrapper.properties
diff --git a/phoo/androidinst/gradlew b/phoo/old/androidinst/gradlew
similarity index 100%
rename from phoo/androidinst/gradlew
rename to phoo/old/androidinst/gradlew
diff --git a/phoo/androidinst/gradlew.bat b/phoo/old/androidinst/gradlew.bat
similarity index 100%
rename from phoo/androidinst/gradlew.bat
rename to phoo/old/androidinst/gradlew.bat
diff --git a/phoo/androidinst/res/drawable-hdpi/ic_stat_not_icon2.png b/phoo/old/androidinst/res/drawable-hdpi/ic_stat_not_icon2.png
similarity index 100%
rename from phoo/androidinst/res/drawable-hdpi/ic_stat_not_icon2.png
rename to phoo/old/androidinst/res/drawable-hdpi/ic_stat_not_icon2.png
diff --git a/phoo/androidinst/res/drawable-ldpi/icon.png b/phoo/old/androidinst/res/drawable-ldpi/icon.png
similarity index 100%
rename from phoo/androidinst/res/drawable-ldpi/icon.png
rename to phoo/old/androidinst/res/drawable-ldpi/icon.png
diff --git a/phoo/androidinst/res/drawable-ldpi/logo.png b/phoo/old/androidinst/res/drawable-ldpi/logo.png
similarity index 100%
rename from phoo/androidinst/res/drawable-ldpi/logo.png
rename to phoo/old/androidinst/res/drawable-ldpi/logo.png
diff --git a/phoo/androidinst/res/drawable-ldpi/not_icon.png b/phoo/old/androidinst/res/drawable-ldpi/not_icon.png
similarity index 100%
rename from phoo/androidinst/res/drawable-ldpi/not_icon.png
rename to phoo/old/androidinst/res/drawable-ldpi/not_icon.png
diff --git a/phoo/androidinst/res/drawable-ldpi/not_icon2.png b/phoo/old/androidinst/res/drawable-ldpi/not_icon2.png
similarity index 100%
rename from phoo/androidinst/res/drawable-ldpi/not_icon2.png
rename to phoo/old/androidinst/res/drawable-ldpi/not_icon2.png
diff --git a/phoo/androidinst/res/drawable-mdpi/ic_stat_not_icon2.png b/phoo/old/androidinst/res/drawable-mdpi/ic_stat_not_icon2.png
similarity index 100%
rename from phoo/androidinst/res/drawable-mdpi/ic_stat_not_icon2.png
rename to phoo/old/androidinst/res/drawable-mdpi/ic_stat_not_icon2.png
diff --git a/phoo/androidinst/res/drawable-xhdpi/ic_stat_not_icon2.png b/phoo/old/androidinst/res/drawable-xhdpi/ic_stat_not_icon2.png
similarity index 100%
rename from phoo/androidinst/res/drawable-xhdpi/ic_stat_not_icon2.png
rename to phoo/old/androidinst/res/drawable-xhdpi/ic_stat_not_icon2.png
diff --git a/phoo/androidinst/res/drawable-xxhdpi/ic_stat_not_icon2.png b/phoo/old/androidinst/res/drawable-xxhdpi/ic_stat_not_icon2.png
similarity index 100%
rename from phoo/androidinst/res/drawable-xxhdpi/ic_stat_not_icon2.png
rename to phoo/old/androidinst/res/drawable-xxhdpi/ic_stat_not_icon2.png
diff --git a/phoo/androidinst/res/drawable-xxxhdpi/ic_stat_not_icon2.png b/phoo/old/androidinst/res/drawable-xxxhdpi/ic_stat_not_icon2.png
similarity index 100%
rename from phoo/androidinst/res/drawable-xxxhdpi/ic_stat_not_icon2.png
rename to phoo/old/androidinst/res/drawable-xxxhdpi/ic_stat_not_icon2.png
diff --git a/phoo/androidinst/res/values/colors.xml b/phoo/old/androidinst/res/values/colors.xml
similarity index 100%
rename from phoo/androidinst/res/values/colors.xml
rename to phoo/old/androidinst/res/values/colors.xml
diff --git a/phoo/androidinst/res/values/libs.xml b/phoo/old/androidinst/res/values/libs.xml
similarity index 100%
rename from phoo/androidinst/res/values/libs.xml
rename to phoo/old/androidinst/res/values/libs.xml
diff --git a/phoo/androidinst/src/com/dwyco/android/.gitignore b/phoo/old/androidinst/src/com/dwyco/android/.gitignore
similarity index 100%
rename from phoo/androidinst/src/com/dwyco/android/.gitignore
rename to phoo/old/androidinst/src/com/dwyco/android/.gitignore
diff --git a/phoo/androidinst/src/com/dwyco/cdc32/.gitignore b/phoo/old/androidinst/src/com/dwyco/cdc32/.gitignore
similarity index 100%
rename from phoo/androidinst/src/com/dwyco/cdc32/.gitignore
rename to phoo/old/androidinst/src/com/dwyco/cdc32/.gitignore
diff --git a/phoo/androidinst/src/com/dwyco/phoo/DwycoApp.java b/phoo/old/androidinst/src/com/dwyco/phoo/DwycoApp.java
similarity index 100%
rename from phoo/androidinst/src/com/dwyco/phoo/DwycoApp.java
rename to phoo/old/androidinst/src/com/dwyco/phoo/DwycoApp.java
diff --git a/phoo/androidinst/src/com/dwyco/phoo/app.java b/phoo/old/androidinst/src/com/dwyco/phoo/app.java
similarity index 100%
rename from phoo/androidinst/src/com/dwyco/phoo/app.java
rename to phoo/old/androidinst/src/com/dwyco/phoo/app.java
diff --git a/phoo/pfx.cpp b/phoo/pfx.cpp
index 3d6ac56e3..543e1c051 100644
--- a/phoo/pfx.cpp
+++ b/phoo/pfx.cpp
@@ -14,6 +14,10 @@ QByteArray User_pfx;
 QByteArray Sys_pfx;
 QByteArray Tmp_pfx;
 
+QByteArray User_pfx_native;
+QByteArray Sys_pfx_native;
+QByteArray Tmp_pfx_native;
+
 QByteArray
 add_pfx(const QByteArray& pfx, const QByteArray& fn)
 {
diff --git a/phoo/pfx.h b/phoo/pfx.h
index a96660e84..a1e51a9b9 100644
--- a/phoo/pfx.h
+++ b/phoo/pfx.h
@@ -15,6 +15,10 @@ extern QByteArray User_pfx;
 extern QByteArray Sys_pfx;
 extern QByteArray Tmp_pfx;
 
+extern QByteArray User_pfx_native;
+extern QByteArray Sys_pfx_native;
+extern QByteArray Tmp_pfx_native;
+
 QByteArray add_pfx(const QByteArray& pfx, const QByteArray& fn);
 QByteArray random_fn();
 QByteArray get_extended(QByteArray txt);
diff --git a/phoo/phoo.pro b/phoo/phoo.pro
index 682dbf0c1..d3221b7df 100644
--- a/phoo/phoo.pro
+++ b/phoo/phoo.pro
@@ -13,8 +13,9 @@ include($$PWD/../$$DWYCO_CONFDIR/conf.pri)
 #!macx-ios-clang:QMAKE_EXTRA_TARGETS += dateincr
 #!macx-ios-clang:PRE_TARGETDEPS += dateincr
 DEFINES += NO_BUILDTIME
+VER="3.63"
 # i'll shit myself if this works on all platforms
-DEFINES += BUILDTIME=\"\\\"3.10\\\"\"
+DEFINES += BUILDTIME=\"\\\"$${VER}\\\"\"
 
 CONFIG(appdir) {
 target.path=/usr/bin
@@ -328,11 +329,11 @@ LIBS += $$D/qt-qml-models/libQtQmlModels_$${QT_ARCH}.a $$D/qtdrv/libqtdrv_$${QT_
 # limitation of java as far as i can tell.
 LIBS += $${L}/libdwyco_jni.so
 #ANDROID_EXTRA_LIBS += $${L}/libdwyco_jni.so
-ANDROID_EXTRA_LIBS = $$PWD/../$$DWYCO_CONFDIR/libs/armeabi-v7a/libdwyco_jni.so $$PWD/../$$DWYCO_CONFDIR/libs/arm64-v8a/libdwyco_jni.so $$PWD/../$$DWYCO_CONFDIR/libs/x86/libdwyco_jni.so
+ANDROID_EXTRA_LIBS = $$PWD/../$$DWYCO_CONFDIR/libs/armeabi-v7a/libdwyco_jni.so $$PWD/../$$DWYCO_CONFDIR/libs/arm64-v8a/libdwyco_jni.so $$PWD/../$$DWYCO_CONFDIR/libs/x86/libdwyco_jni.so $$PWD/../$$DWYCO_CONFDIR/libs/x86_64/libdwyco_jni.so
 
 ANDROID_TARGET_SDK_VERSION=30
-ANDROID_VERSION_CODE=99
-ANDROID_VERSION_NAME="3.0"
+ANDROID_VERSION_CODE=2000111
+ANDROID_VERSION_NAME=$$VER
 #contains(ANDROID_TARGET_ARCH,armeabi-v7a) {
 #    ANDROID_EXTRA_LIBS += \
 #        $$PWD/arm/libcrypto.so \
@@ -343,7 +344,7 @@ equals(QMAKE_HOST.os, Darwin) {
 message(MACOS)
 include(/Users/dwight/android/astudio/android_openssl/openssl.pri)
 } else {
-include(/home/dwight/android/astudio/android_openssl/openssl.pri)
+include(/home/dwight/Android/Sdk/android_openssl/openssl.pri)
 }
 #LIBS += \
 #$${D}/libcdc32.a \
@@ -510,5 +511,6 @@ DISTFILES += \
     androidinst2/gradle/wrapper/gradle-wrapper.properties \
     androidinst2/gradlew \
     androidinst2/gradlew.bat \
-    androidinst2/res/values/libs.xml
+    androidinst2/res/values/libs.xml \
+    androidinst2/res/xml/provider_paths.xml
 
diff --git a/phoo/qml.qrc b/phoo/qml.qrc
index ae9867a77..42bdcf417 100644
--- a/phoo/qml.qrc
+++ b/phoo/qml.qrc
@@ -23,7 +23,6 @@
         <file>PINDialog.qml</file>
         <file>PINChangeDialog.qml</file>
         <file>PicPreview.qml</file>
-        <file>ContactList.qml</file>
         <file>SimpleToolbar.qml</file>
         <file>CircularImage.qml</file>
         <file>CQRes.qml</file>
@@ -57,6 +56,10 @@
         <file>DevGroup.qml</file>
         <file>BareConvList.qml</file>
         <file>+desktop/BareConvList.qml</file>
+        <file>SendMulti.qml</file>
+        <file>Migrate.qml</file>
+        <file>Reindex.qml</file>
+        <file>RestoreAutoBackup.qml</file>
     </qresource>
     <qresource prefix="/+linux"/>
     <qresource prefix="/+vgqt"/>
diff --git a/phoo/simple_user_list.cpp b/phoo/simple_user_list.cpp
index 4670e1497..1ffbabc51 100644
--- a/phoo/simple_user_list.cpp
+++ b/phoo/simple_user_list.cpp
@@ -195,6 +195,7 @@ SimpleUserModel::load_users_to_model()
     int n;
     clear();
     QObject::connect(TheDwycoCore, SIGNAL(sys_uid_resolved(QString)), this, SLOT(uid_resolved(QString)), Qt::UniqueConnection);
+    dwyco_load_users2(1, 0);
     dwyco_get_user_list2(&l, &n);
     simple_scoped ql(l);
     for(int i = 0; i < n; ++i)
@@ -400,12 +401,12 @@ SimpleUserSortFilterModel::lessThan(const QModelIndex& left, const QModelIndex&
     else if(!lsm && rsm)
         return false;
 
-    bool lreg = m->data(left, m->roleForName("REGULAR")).toBool();
-    bool rreg = m->data(right, m->roleForName("REGULAR")).toBool();
-    if(lreg && !rreg)
-        return true;
-    else if(!lreg && rreg)
-        return false;
+//    bool lreg = m->data(left, m->roleForName("REGULAR")).toBool();
+//    bool rreg = m->data(right, m->roleForName("REGULAR")).toBool();
+//    if(lreg && !rreg)
+//        return true;
+//    else if(!lreg && rreg)
+//        return false;
 
     int ret1 = QSortFilterProxyModel::lessThan(left, right);
     int ret2 = QSortFilterProxyModel::lessThan(right, left);
diff --git a/phoo/simple_user_list.h b/phoo/simple_user_list.h
index 0cfb1ebde..5c8b632d2 100644
--- a/phoo/simple_user_list.h
+++ b/phoo/simple_user_list.h
@@ -95,6 +95,15 @@ public:
         return 0;
     }
 
+    Q_INVOKABLE QObject *at(int i) const {
+        QModelIndex mi = index(i, 0);
+        auto model = dynamic_cast<SimpleUserModel *>(sourceModel());
+        if(model) {
+            return model->at(mapToSource(mi).row());
+        }
+        return 0;
+    }
+
     Q_INVOKABLE void load_users_to_model();
     Q_INVOKABLE void load_admin_users_to_model();
     Q_INVOKABLE void load_from_cq_file();
diff --git a/phoo/ssmap.cpp b/phoo/ssmap.cpp
index 5b4d09654..3934b8fcf 100644
--- a/phoo/ssmap.cpp
+++ b/phoo/ssmap.cpp
@@ -23,15 +23,16 @@ typedef QMap<QString, QString> SSMap;
 
 static SSMap Settings;
 
-void
+int
 settings_load()
 {
 
     QFile f(add_pfx(User_pfx, "settings.q2"));
     if(!f.open(QIODevice::ReadOnly))
-        return;
+        return 0;
     QDataStream in(&f);
     in >> Settings;
+    return 1;
 }
 
 void
diff --git a/phoo/ssmap.h b/phoo/ssmap.h
index eedeaf032..503135341 100644
--- a/phoo/ssmap.h
+++ b/phoo/ssmap.h
@@ -11,7 +11,7 @@
 class QString;
 
 void settings_save();
-void settings_load();
+int settings_load();
 int setting_get(const QString& key, QString& out);
 int setting_put(const QString& key, const QString& value);
 
