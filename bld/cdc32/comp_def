#
# template for comp_def
#
# $Header: g:/dwight/repo/cdc32/rcs/comp_def 1.30 1999/01/10 16:59:22 dwight Checkpoint $
#

COMP_NAME=cdc32

.IF $(COMP) != $(NULL)
.IF $(COMP) != $(COMP_NAME)
# totally bogus, but need to stop the make here or weird stuff happens
.ERROR:
	echo COMP name conflict, makefiles are hosed.
	
COMP := __bogus
.INCLUDE: __bogus

.END
.ELSE
COMP=$(COMP_NAME)
.END

BC5=0

#CC=bcc32a
#
# list of component level C and C++ options
#
COMP_DFLAGS= \
	-DVCCFG_FILE \
	-DDWVEC_DOINIT \
	-DAUTOBUG

COMP_CPPOPTS +=  
.IF $(ENV) != M32
COMP_IFLAGS += -I../winemu
.END


# The default library built by the component has a basename
# that is generated from the component name. Depending on the
# compiler system used to do the build, the name of the library
# will be something like $(COMP).lib or $(COMP).a
# The same thing is true for the default executable for the component,
# execept it will be named something like $(COMP).exe or $(COMP)
# You could change the default output, but this is not a good idea...
# If you have other executables or libraries to generate, it is
# better to add targets to comp_trg to build them (pending support
# for generating multiple libs/exes in the make system).

#
# list of things that are put into the library for the component.
# names should be without extensions, like this:
# COMP_LIB_MEMBERS=file1 file2 file3
#
#keydyn \
#xinfo \
#snds \
#vfwmgr \

.IF $(ENV) == B32
COMP_LIB_MEMBERS=
.ELSE

COMP_LIB_MEMBERS=  \
mmchan \
mmbld \
mmaud \
mmband \
mmconn \
mmctrl \
mmchan2 \
mmsync \
audconv \
audchk \
acqfile \
dct \
audmixs \
audout \
bcastq \
chimp \
chroma \
codec \
colcod \
coldec \
dchroma \
qtab \
dwrate \
dwrtlog \
dwtimer \
enc \
filetube \
gsmconv \
imgmisc \
jccolor \
jchuff \
jcparam \
jdcolor \
jdhuff \
jdmaster \
jfdctfst \
jfdctint \
jqtab \
jtcode \
jtdecode \
jutils \
lpcconv \
mo \
netvid \
packbits \
qdirth \
qpol \
dwlog \
cllaccpt \
ratetwkr \
rawfiles \
syncvar \
uicfg \
usercnfg \
vfwinvst \
vidinput \
zapadv \
doinit \
netcod \
netcod2 \
tcode \
sleep \
statfun \
dirth \
rlc \
tdecode \
tpgmdec \
sqrs \
qauth \
rawconv \
senc \
aq \
vcpan \
ta \
stkd \
audi \
audo \
aconn \
tpgmcod \
globs \
fl \
mmserv \
tl \
tflt \
dlli \
mcc \
qmsg \
winemu \
audexto \
aqext \
aqextaud \
audth \
audmix \
autoup \
dmdsrv \
fnmod \
whack \
xinfo \
prfcache \
vidcvt \
callq \
asshole \
stunpool \
sd3 \
servass \
chatops \
mmcall \
calllive \
spxconv \
calldll \
msgddll \
jcolcod \
jcoldec \
netdiag \
pgdll \
chatgrid \
chatq \
sysattr \
vorbconv \
ezset \
linid \
se \
theoracol \
ser \
dhsetup \
sproto \
mmchan3 \
cdcpal \
cdcpal2 \
pkcache \
qsend \
ssns \
directsend \
msend \
fetch_to_inbox \
backsql \
sqlbq \
favmsg

.IF $(OS_STYLE) == LINUX
.IF $(OS_SUBSTYLE) != macosx

COMP_LIB_MEMBERS += \
aextsdl \
esdaqaud \
esdaudin 

.END
.END



.IF $(OS_SUBSTYLE) == macosx
COMP_LIB_MEMBERS += macnative macvg
.END

.END


# skelaudout

# skeletal audio input driver for use with lintest
#skelaudin

# if you want esd audio capture, includes these and use
# the esd_ functions in the set_audio_capture_callbacks call
#esdaqaud \
#esdaudin \

# list of objects that should be linked into the component executable
# but not put into the library. without extensions:
#COMP_EXE_MEMBERS=$(CORE_MEMBERS_CPP:s/.cc//) $(CORE_MEMBERS_C:s/.c//) $(OWL_MEMBERS:s/.cpp//)
COMP_EXE_MEMBERS= ftpreview 

#
# list of executables to be generated by the
# component. Not fully supported. You need extra
# targets in comp_trg to get this to work...
#
#EXES_COMP=$(VER_MEMBERS:s/.c//)

# list of libraries to link with the component executable. these
# are libraries that are local to the component:
# LIBS_COMP=lib1 lib2
LIBS_COMP=cdc32

# list of libraries to link with the component executable from the
# configuration install directory.
# COMP_LIBS_IMPORT=lib1 lib2
#
# use this for building cdc32 (doesn't work right now)
#COMP_LIBS_IMPORT=gsm tbrowse crypto20 dwcls gnustr gnure pbm pgm ppm vc owlsock lpc propdl

.IF $(OS_SUBSTYLE) == macosx
# for the mac, it is easier to install vorbis, theora, ogg using
# macports, since the makefiles are kinda screwed up that come with
# the distributions. we need an old version of speex, so we are still
# stuck building that locally.
#COMP_LIBS_IMPORT=gsm vc lpc crypto20 ppm pgm pbm zlib kazlib dwcls libspeex jenkins
COMP_LIBS_IMPORT=gsm vc lpc crypto20 ppm pgm pbm zlib kazlib dwcls libvorbis libvorbisenc libtheoraenc libtheoradec libspeex libogg jenkins
.ELSE
COMP_LIBS_IMPORT=gsm vc lpc crypto5 ppm pgm pbm zlib kazlib dwcls libvorbis libvorbisenc libtheoraenc libtheoradec libspeex libspeexdsp libogg jenkins
.END

.IF $(FLAVOR) == leak
COMP_LIBS_IMPORT += cppleak
.END

# list of libraries to link with component executable from the
# surrounding environment. all parts of the items to be linked (extensions,
# paths, etc.) must be explicit, and the make system does not
# change the values.
# LIBS_FOREIGN=c:\djgpp\lib\libgr.a
# since the make system gives you no help with the names, you may
# have to twiddle with the "IF" conditions to make it work right
# for all the platforms the component can compile on.
#
.IF $(OS_SUBSTYLE) == macosx
#LIBS_FOREIGN= \
#/opt/local/lib/libogg.a \
#/opt/local/lib/libtheoraenc.a \
#/opt/local/lib/libtheoradec.a \
#/opt/local/lib/libtheora.a \
#/opt/local/lib/libvorbisenc.a \
#/opt/local/lib/libvorbis.a
#
.ELSE

.IF $(MACH) == UNIX
LIBS_FOREIGN=
.ELSE
.END
.END

#
# list of libraries (or -l flags) to be used on the link line.
# these must be complete paths or -l flags, and they are not
# used in any dependency checking.
#
.IF $(MACH) == UNIX
LIBS_SYSTEM=-lstdc++ -lpthread -lm -lsqlite3 -ldl
.ELSE
#LIBS_SYSTEM=-lm
.END

# list of files to be put into the source repository for the component.
# complete file names must be specified (without leading path info).
# do not put binary files into the list, since not all version control systems
# can handle binaries.
VER_MEMBERS= 

# list of local include files to install into the configuration include dir
#
# INCLUDES_EXPORT=a.h b.h
INCLUDES_EXPORT= vccfg.h dlli.h cdcdll.pas vidaq.h esdaudin.h  aextsdl.h

# list of local libraries to install into the configuration lib dir
# no extensions or path info...
# if you don't set this, the default is to install the default library
# for the component.
# if you set it to NONE, nothing is exported.
#
# LIBS_COMP_EXPORT=foolib barlib
.IF $(ENV) == B32
LIBS_COMP_EXPORT=NONE
.ELSE
# LIBS_COMP_EXPORT=
.END

# list of executables to export from the component to the config install dir.
# if you don't set this, default is to install the default executable.
# if you set it to NONE, nothing is exported.
# no extensions or paths...
#
# EXES_COMP_EXPORT=foo bar
#
EXES_COMP_EXPORT=NONE

#
# list of scripts to be exported to config install dir.
# just list the names of the scripts, and they are 
# copied over... note: this is done at the same time
# the executable for the component is installed.
#
# SCRIPTS_EXPORT=groovy

# list of documentation files to export from component to config install dir.
#
#DOCS_EXPORT=cdc16.hlp

#
# list of miscellaneous files to install in "misc"
# MISCS_EXPORT=mumble.baz
MISCS_EXPORT= poli qtabs
