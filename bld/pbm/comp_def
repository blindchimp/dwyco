#
# template for comp_def
#
# $Header: g:/dwight/repo/pbm/rcs/comp_def 1.2 1994/10/13 16:31:48 dwight Exp $
#

COMP_NAME=pbm

.IF $(COMP) != $(NULL)
.IF $(COMP) != $(COMP_NAME)
# totally bogus, but need to stop the make here or weird stuff happens
.ERROR:
	echo COMP name conflict, makefiles are hosed.
	
COMP := __bogus
.INCLUDE: __bogus

.END
.ELSE
COMP=$(COMP_NAME)
.END

#
# list of component level C and C++ options
#
COMP_CCOPTS=
COMP_CPPOPTS=

# The default library built by the component has a basename
# that is generated from the component name. Depending on the
# compiler system used to do the build, the name of the library
# will be something like $(COMP).lib or $(COMP).a
# The same thing is true for the default executable for the component,
# execept it will be named something like $(COMP).exe or $(COMP)
# You could change the default output, but this is not a good idea...
# If you have other executables or libraries to generate, it is
# better to add targets to comp_trg to build them (pending support
# for generating multiple libs/exes in the make system).

#
# list of things that are put into the library for the component.
# names should be without extensions, like this:
# COMP_LIB_MEMBERS=file1 file2 file3
#
COMP_LIB_MEMBERS=  \
	libpbm1 \
	libpbm2 \
	libpbm3 \
	libpbm4 \
	libpbm5

# list of objects that should be linked into the component executable
# but not put into the library. without extensions:
# COMP_EXE_MEMBERS=file1 file2 file3

#
# list of executables to be generated by the
# component. Not fully supported. You need extra
# targets in comp_trg to get this to work...
#
#EXES_COMP=$(VER_MEMBERS:s/.c//)

# list of libraries to link with the component executable. these
# are libraries that are local to the component:
# LIBS_COMP=lib1 lib2
LIBS_COMP=

# list of libraries to link with the component executable from the
# configuration install directory.
# COMP_LIBS_IMPORT=lib1 lib2
#
#COMP_LIBS_IMPORT=nrc

# list of libraries to link with component executable from the
# surrounding environment. all parts of the items to be linked (extensions,
# paths, etc.) must be explicit, and the make system does not
# change the values.
# LIBS_FOREIGN=c:\djgpp\lib\libgr.a
# since the make system gives you no help with the names, you may
# have to twiddle with the "IF" conditions to make it work right
# for all the platforms the component can compile on.
#
.IF $(SYSTEM_STYLE) == UNIX
LIBS_FOREIGN=
.ELSE
LIBS_FOREIGN=
.END

#
# list of libraries (or -l flags) to be used on the link line.
# these must be complete paths or -l flags, and they are not
# used in any dependency checking.
#
#LIBS_SYSTEM=-lm

# list of files to be put into the source repository for the component.
# complete file names must be specified (without leading path info).
# do not put binary files into the list, since not all version control systems
# can handle binaries.
VER_MEMBERS= \
atktopbm.1 \
atktopbm.c \
bitrever.h \
brushtop.1 \
brushtop.c \
cmuwm.h \
cmuwmtop.1 \
cmuwmtop.c \
g3.h \
g3topbm.1 \
g3topbm.c \
gemtopbm.1 \
gemtopbm.c \
icontopb.1 \
icontopb.c \
includes.h \
libpbm.3 \
libpbm.h \
libpbm.rsp \
libpbm1.c \
libpbm2.c \
libpbm3.c \
libpbm4.c \
libpbm5.c \
macp.h \
macptopb.1 \
macptopb.c \
makefile.unx \
makefile.dos \
mgr.h \
mgrtopbm.1 \
mgrtopbm.c \
pbm.5 \
pbm.h \
pbmclean.1 \
pbmclean.c \
pbmepson.1 \
pbmepson.c \
pbmfilte.1 \
pbmfont.h \
pbmlife.1 \
pbmlife.c \
pbmmake.1 \
pbmmake.c \
pbmmask.1 \
pbmmask.c \
pbmmerge.c \
pbmpscal.1 \
pbmpscal.c \
pbmreduc.1 \
pbmreduc.c \
pbmtext.1 \
pbmtext.c \
pbmto10x.1 \
pbmto10x.c \
pbmto442.1 \
pbmto442.c \
pbmtoasc.1 \
pbmtoasc.c \
pbmtoatk.1 \
pbmtoatk.c \
pbmtobbn.1 \
pbmtobbn.c \
pbmtocmu.1 \
pbmtocmu.c \
pbmtoeps.1 \
pbmtoeps.c \
pbmtog3.1 \
pbmtog3.c \
pbmtogem.c \
pbmtogem.1 \
pbmtogo.1 \
pbmtogo.c \
pbmtoico.1 \
pbmtoico.c \
pbmtolj.1 \
pbmtolj.c \
pbmtoln0.c \
pbmtoln0.1 \
pbmtolps.1 \
pbmtolps.c \
pbmtomac.1 \
pbmtomac.c \
pbmtomgr.c \
pbmtomgr.1 \
pbmtopi3.c \
pbmtopi3.1 \
pbmtopk.c \
pbmtopk.1 \
pbmtoplo.1 \
pbmtoplo.c \
pbmtoptx.c \
pbmtoptx.1 \
pbmtox10.1 \
pbmtox10.c \
pbmtoxbm.c \
pbmtoxbm.1 \
pbmtoybm.c \
pbmtoybm.1 \
pbmtozin.1 \
pbmtozin.c \
pbmupc.c \
pbmupc.1 \
pi3topbm.c \
pi3topbm.1 \
pktopbm.c \
pktopbm.1 \
xbmtopbm.c \
xbmtopbm.1 \
ybmtopbm.c \
ybmtopbm.1 \
pbmplus.h \
version.h \
compile.h 

# list of local include files to install into the configuration include dir
#
# INCLUDES_EXPORT=a.h b.h
INCLUDES_EXPORT= pbmplus.h pbm.h version.h compile.h libpbm.h

# list of local libraries to install into the configuration lib dir
# no extensions or path info...
# if you don't set this, the default is to install the default library
# for the component.
# if you set it to NONE, nothing is exported.
#
# LIBS_COMP_EXPORT=foolib barlib
#LIBS_COMP_EXPORT=NONE

# list of executables to export from the component to the config install dir.
# if you don't set this, default is to install the default executable.
# if you set it to NONE, nothing is exported.
# no extensions or paths...
#
# EXES_COMP_EXPORT=foo bar
#
EXES_COMP_EXPORT=NONE

#
# list of scripts to be exported to config install dir.
# just list the names of the scripts, and they are 
# copied over... note: this is done at the same time
# the executable for the component is installed.
#
# SCRIPTS_EXPORT=groovy

# list of documentation files to export from component to config install dir.
#
DOCS_EXPORT= \
atktopbm.1 \
brushtop.1 \
cmuwmtop.1 \
g3topbm.1 \
gemtopbm.1 \
icontopb.1 \
macptopb.1 \
mgrtopbm.1 \
pbmclean.1 \
pbmepson.1 \
pbmfilte.1 \
pbmlife.1 \
pbmmake.1 \
pbmmask.1 \
pbmpscal.1 \
pbmreduc.1 \
pbmtext.1 \
pbmto10x.1 \
pbmto442.1 \
pbmtoasc.1 \
pbmtoatk.1 \
pbmtobbn.1 \
pbmtocmu.1 \
pbmtoeps.1 \
pbmtog3.1 \
pbmtogem.1 \
pbmtogo.1 \
pbmtoico.1 \
pbmtolj.1 \
pbmtoln0.1 \
pbmtolps.1 \
pbmtomac.1 \
pbmtomgr.1 \
pbmtopi3.1 \
pbmtopk.1 \
pbmtoplo.1 \
pbmtoptx.1 \
pbmtox10.1 \
pbmtoxbm.1 \
pbmtoybm.1 \
pbmtozin.1 \
pbmupc.1 \
pi3topbm.1 \
pktopbm.1 \
xbmtopbm.1 \
ybmtopbm.1 \
pbm.5 \
libpbm.3
